{"contexts":{"yshop-server":{"positiveMatches":{"YshopDeptDataPermissionAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'co.yixiang.yshop.framework.security.core.LoginUser'"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: co.yixiang.yshop.module.system.api.permission.PermissionApi,co.yixiang.yshop.framework.datapermission.core.rule.dept.DeptDataPermissionRuleCustomizer; SearchStrategy: all) found beans 'sysDeptDataPermissionRuleCustomizer', 'permissionApiImpl'"}],"YshopDataSourceAutoConfiguration#druidAdRemoveFilterFilter":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.datasource.druid.stat-view-servlet.enabled=true) matched"}],"YshopSwaggerAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'io.swagger.v3.oas.models.OpenAPI'"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.api-docs.enabled=true) matched"}],"YshopMetricsAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryCustomizer'"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (yshop.metrics.enable) matched"}],"YshopTracerAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'co.yixiang.yshop.framework.tracer.core.aop.BizTraceAspect'"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (yshop.tracer.enable) matched"}],"YshopWebAutoConfiguration#restTemplate":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.web.client.RestTemplate; SearchStrategy: all) did not find any beans"}],"YshopWebSocketAutoConfiguration":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (yshop.websocket.enable) matched"}],"YshopWebSocketAutoConfiguration.LocalWebSocketMessageSenderConfiguration":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (yshop.websocket.sender-type=local) matched"}],"DruidDataSourceAutoConfigure":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'com.alibaba.druid.pool.DruidDataSource'"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.datasource.type=com.alibaba.druid.pool.DruidDataSource) matched"}],"DruidFilterConfiguration#statFilter":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.datasource.druid.filter.stat.enabled) matched"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.alibaba.druid.filter.stat.StatFilter; SearchStrategy: all) did not find any beans"}],"DruidStatViewServletConfiguration":[{"condition":"OnWebApplicationCondition","message":"@ConditionalOnWebApplication (required) found 'session' scope"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.datasource.druid.stat-view-servlet.enabled=true) matched"}],"DruidWebStatFilterConfiguration":[{"condition":"OnWebApplicationCondition","message":"@ConditionalOnWebApplication (required) found 'session' scope"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.datasource.druid.web-stat-filter.enabled=true) matched"}],"DruidDynamicDataSourceConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'com.alibaba.druid.spring.boot3.autoconfigure.DruidDataSourceAutoConfigure'"}],"DynamicDataSourceAopConfiguration#dsProcessor":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.baomidou.dynamic.datasource.processor.DsProcessor; SearchStrategy: all) did not find any beans"}],"DynamicDataSourceAopConfiguration#dynamicDatasourceAnnotationAdvisor":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.datasource.dynamic.aop.enabled=true) matched"}],"DynamicDataSourceAopConfiguration#dynamicTransactionAdvisor":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.datasource.dynamic.seata=false) matched"}],"DynamicDataSourceAssistConfiguration#dataSourceCreator":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.baomidou.dynamic.datasource.creator.DefaultDataSourceCreator; SearchStrategy: all) did not find any beans"}],"DynamicDataSourceAssistConfiguration#dataSourceInitEvent":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.baomidou.dynamic.datasource.event.DataSourceInitEvent; SearchStrategy: all) did not find any beans"}],"DynamicDataSourceAssistConfiguration.DsTxEventListenerFactoryConfiguration#dsTxEventListenerFactory":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.baomidou.dynamic.datasource.tx.DsTxEventListenerFactory; SearchStrategy: all) did not find any beans"}],"DynamicDataSourceAutoConfiguration":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.datasource.dynamic.enabled=true) matched"}],"DynamicDataSourceAutoConfiguration#dataSource":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans"}],"DynamicDataSourceCreatorAutoConfiguration.DruidDataSourceCreatorConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'com.alibaba.druid.pool.DruidDataSource'"}],"DynamicDataSourceCreatorAutoConfiguration.HikariDataSourceCreatorConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource'"}],"MybatisPlusAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean'"},{"condition":"OnBeanCondition","message":"@ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'"}],"MybatisPlusAutoConfiguration#ddlApplicationRunner":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.baomidou.mybatisplus.autoconfigure.DdlApplicationRunner; SearchStrategy: all) did not find any beans"}],"MybatisPlusAutoConfiguration#sqlSessionFactory":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.apache.ibatis.session.SqlSessionFactory; SearchStrategy: all) did not find any beans"}],"MybatisPlusAutoConfiguration#sqlSessionTemplate":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.mybatis.spring.SqlSessionTemplate; SearchStrategy: all) did not find any beans"}],"MybatisPlusLanguageDriverAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.apache.ibatis.scripting.LanguageDriver'"}],"WxMaServiceAutoConfiguration#wxMaService":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: cn.binarywang.wx.miniapp.config.WxMaConfig; SearchStrategy: all) found bean 'wxMaConfig'; @ConditionalOnMissingBean (types: cn.binarywang.wx.miniapp.api.WxMaService; SearchStrategy: all) did not find any beans"}],"WxMaInRedisTemplateConfigStorageConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.data.redis.core.StringRedisTemplate'"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (wx.miniapp.config-storage.type=redistemplate) matched"}],"WxMaInRedisTemplateConfigStorageConfiguration#wxMaConfig":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: cn.binarywang.wx.miniapp.config.WxMaConfig; SearchStrategy: all) did not find any beans"}],"WxMpServiceAutoConfiguration#wxMpService":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: me.chanjar.weixin.mp.api.WxMpService; SearchStrategy: all) did not find any beans"}],"WxMpStorageAutoConfiguration#wxMpConfigStorage":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: me.chanjar.weixin.mp.config.WxMpConfigStorage; SearchStrategy: all) did not find any beans"}],"PayAutoConfiguration#configure":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: com.egzosn.pay.spring.boot.core.PayServiceConfigurer; SearchStrategy: all) found bean 'merchantPayServiceConfigurer'; @ConditionalOnMissingBean (types: com.egzosn.pay.spring.boot.core.merchant.MerchantDetailsService; SearchStrategy: all) did not find any beans"}],"PayAutoConfiguration#detailsServiceConfigurer":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: com.egzosn.pay.spring.boot.core.PayServiceConfigurer; SearchStrategy: all) found bean 'merchantPayServiceConfigurer'; @ConditionalOnMissingBean (types: com.egzosn.pay.spring.boot.core.configurers.MerchantDetailsServiceConfigurer; SearchStrategy: all) did not find any beans"}],"PayAutoConfiguration#messageHandlerConfigurer":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.egzosn.pay.spring.boot.core.configurers.PayMessageConfigurer; SearchStrategy: all) did not find any beans"}],"PayAutoConfiguration#payServiceManager":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: com.egzosn.pay.spring.boot.core.merchant.MerchantDetailsService; SearchStrategy: all) found bean 'configure'; @ConditionalOnMissingBean (types: com.egzosn.pay.spring.boot.core.PayServiceManager; SearchStrategy: all) did not find any beans"}],"AliPaymentPlatform":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'com.egzosn.pay.ali.api.AliPayConfigStorage'"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.egzosn.pay.spring.boot.core.provider.merchant.platform.AliPaymentPlatform; SearchStrategy: all) did not find any beans"}],"WxPaymentPlatform":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'com.egzosn.pay.wx.api.WxPayConfigStorage'"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.egzosn.pay.spring.boot.core.provider.merchant.platform.WxPaymentPlatform; SearchStrategy: all) did not find any beans"}],"WxV3CombinePaymentPlatform":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'com.egzosn.pay.wx.v3.api.WxPayConfigStorage'"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.egzosn.pay.spring.boot.core.provider.merchant.platform.WxV3CombinePaymentPlatform; SearchStrategy: all) did not find any beans"}],"WxV3PaymentPlatform":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'com.egzosn.pay.wx.v3.api.WxPayConfigStorage'"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.egzosn.pay.spring.boot.core.provider.merchant.platform.WxV3PaymentPlatform; SearchStrategy: all) did not find any beans"}],"WxV3ProfitSharingPlatform":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'com.egzosn.pay.wx.v3.api.WxPayConfigStorage'"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.egzosn.pay.spring.boot.core.provider.merchant.platform.WxV3ProfitSharingPlatform; SearchStrategy: all) did not find any beans"}],"EasyTransResponseBodyAdvice":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (easy-trans.is-enable-global=true) matched"}],"TransServiceConfig#rpcTransService":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: com.fhs.trans.service.impl.SimpleTransService$SimpleTransDiver; SearchStrategy: all) found bean 'MybatisPlusSimpleTransDiver'"}],"TransServiceConfig#simpleTransService":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: com.fhs.trans.service.impl.SimpleTransService$SimpleTransDiver; SearchStrategy: all) found bean 'MybatisPlusSimpleTransDiver'"}],"TransServiceConfig#transProxyController":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: com.fhs.trans.service.impl.SimpleTransService$SimpleTransDiver; SearchStrategy: all) found bean 'MybatisPlusSimpleTransDiver'"}],"Knife4jAutoConfiguration":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (knife4j.enable=true) matched"}],"Knife4jAutoConfiguration#knife4jJakartaOperationCustomizer":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.github.xiaoymin.knife4j.spring.extension.Knife4jJakartaOperationCustomizer; SearchStrategy: all) did not find any beans"}],"Knife4jAutoConfiguration#knife4jOpenApiCustomizer":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.github.xiaoymin.knife4j.spring.extension.Knife4jOpenApiCustomizer; SearchStrategy: all) did not find any beans"}],"MybatisPlusJoinAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean'"},{"condition":"OnBeanCondition","message":"@ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'"}],"MybatisPlusJoinAutoConfiguration#mpjInterceptor":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean'"}],"MybatisPlusJoinAutoConfiguration#mpjInterceptorConfig":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean'"}],"MybatisPlusJoinAutoConfiguration#mpjSqlInjectorOnMiss":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean'"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.baomidou.mybatisplus.core.injector.ISqlInjector; SearchStrategy: all) did not find any beans"}],"MybatisPlusJoinAutoConfiguration.MPJMappingConfig":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean'"}],"MybatisPlusJoinAutoConfiguration.MPJSpringContext":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean'"}],"LogRecordProxyAutoConfiguration#diffItemsToLogContentService":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.mzt.logapi.starter.diff.IDiffItemsToLogContentService; SearchStrategy: all) did not find any beans"}],"LogRecordProxyAutoConfiguration#functionService":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.mzt.logapi.service.IFunctionService; SearchStrategy: all) did not find any beans"}],"LogRecordProxyAutoConfiguration#logRecordPerformanceMonitor":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.mzt.logapi.service.ILogRecordPerformanceMonitor; SearchStrategy: all) did not find any beans"}],"LogRecordProxyAutoConfiguration#operatorGetService":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.mzt.logapi.service.IOperatorGetService; SearchStrategy: all) did not find any beans"}],"LogRecordProxyAutoConfiguration#recordService":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.mzt.logapi.service.ILogRecordService; SearchStrategy: all) did not find any beans"}],"AjCaptchaServiceAutoConfiguration#captchaService":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.xingyuv.captcha.service.CaptchaService; SearchStrategy: all) did not find any beans"}],"JustAuthAutoConfiguration#authRequestFactory":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (justauth.enabled=true) matched"}],"JustAuthStateCacheConfiguration.Redis":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisTemplate'"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (justauth.cache.type=redis) matched"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.xingyuv.jushauth.cache.AuthStateCache; SearchStrategy: all) did not find any beans"}],"SpringNativeClientAutoConfiguration":[{"condition":"OnWebApplicationCondition","message":"@ConditionalOnWebApplication (required) found 'session' scope"},{"condition":"SpringBootAdminClientEnabledCondition","message":"matched"}],"SpringNativeServerAutoConfiguration":[{"condition":"SpringBootAdminServerEnabledCondition","message":"matched"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: de.codecentric.boot.admin.server.config.AdminServerMarkerConfiguration$Marker; SearchStrategy: all) found bean 'adminServerMarker'"}],"RedissonAutoConfiguration#redisson":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.redisson.api.RedissonClient; SearchStrategy: all) did not find any beans"}],"RedissonAutoConfiguration#redissonConnectionFactory":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans"}],"RedissonAutoConfiguration#redissonReactive":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.redisson.api.RedissonReactiveClient; SearchStrategy: all) did not find any beans"}],"RedissonAutoConfiguration#redissonRxJava":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.redisson.api.RedissonRxClient; SearchStrategy: all) did not find any beans"}],"RedissonAutoConfiguration#stringRedisTemplate":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans"}],"RedissonAutoConfigurationV2":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.redisson.Redisson', 'org.springframework.data.redis.core.RedisOperations'"}],"SpringDocConfiguration":[{"condition":"OnWebApplicationCondition","message":"@ConditionalOnWebApplication (required) found 'session' scope"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.api-docs.enabled) matched"}],"SpringDocConfiguration#fileSupportConverter":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.converters.FileSupportConverter; SearchStrategy: all) did not find any beans"}],"SpringDocConfiguration#operationBuilder":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.service.OperationService; SearchStrategy: all) did not find any beans"}],"SpringDocConfiguration#parameterBuilder":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.service.GenericParameterService; SearchStrategy: all) did not find any beans"}],"SpringDocConfiguration#polymorphicModelConverter":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.model-converters.polymorphic-converter.enabled) matched"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.converters.PolymorphicModelConverter; SearchStrategy: all) did not find any beans"}],"SpringDocConfiguration#requestBodyBuilder":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.service.RequestBodyService; SearchStrategy: all) did not find any beans"}],"SpringDocConfiguration#responseSupportConverter":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.converters.ResponseSupportConverter; SearchStrategy: all) did not find any beans"}],"SpringDocConfiguration#schemaPropertyDeprecatingConverter":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.model-converters.deprecating-converter.enabled) matched"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.converters.SchemaPropertyDeprecatingConverter; SearchStrategy: all) did not find any beans"}],"SpringDocConfiguration#securityParser":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.service.SecurityService; SearchStrategy: all) did not find any beans"}],"SpringDocConfiguration#springDocCustomizers":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.customizers.SpringDocCustomizers; SearchStrategy: all) did not find any beans"}],"SpringDocConfiguration#springDocProviders":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringDocProviders; SearchStrategy: all) did not find any beans"}],"SpringDocConfiguration#springdocBeanFactoryPostProcessor":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.boot.context.properties.bind.BindResult'"},{"condition":"CacheOrGroupedOpenApiCondition","message":"AnyNestedCondition 1 matched 1 did not; NestedCondition on CacheOrGroupedOpenApiCondition.OnCacheDisabled found non-matching nested conditions @ConditionalOnProperty (springdoc.cache.disabled) did not find property 'springdoc.cache.disabled', @ConditionalOnMissingBean (types: org.springdoc.core.models.GroupedOpenApi; SearchStrategy: all) found beans of type 'org.springdoc.core.models.GroupedOpenApi' systemGroupedOpenApi, infraGroupedOpenApi, mpGroupedOpenApi, productGroupedOpenApi, shopGroupedOpenApi, allGroupedOpenApi; NestedCondition on CacheOrGroupedOpenApiCondition.OnMultipleOpenApiSupportCondition AnyNestedCondition 1 matched 1 did not; NestedCondition on MultipleOpenApiSupportCondition.OnActuatorDifferentPort found non-matching nested conditions Management Port actual port type (SAME) did not match required type (DIFFERENT), @ConditionalOnProperty (springdoc.show-actuator) did not find property 'springdoc.show-actuator'; NestedCondition on MultipleOpenApiSupportCondition.OnMultipleOpenApiSupportCondition AnyNestedCondition 1 matched 1 did not; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupConfigProperty @ConditionalOnProperty (springdoc.group-configs[0].group) did not find property 'springdoc.group-configs[0].group'; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupedOpenApiBean @ConditionalOnBean (types: org.springdoc.core.models.GroupedOpenApi; SearchStrategy: all) found beans 'systemGroupedOpenApi', 'allGroupedOpenApi', 'mpGroupedOpenApi', 'infraGroupedOpenApi', 'productGroupedOpenApi', 'shopGroupedOpenApi'"}],"SpringDocConfiguration#springdocObjectMapperProvider":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.providers.ObjectMapperProvider; SearchStrategy: all) did not find any beans"}],"SpringDocConfiguration.QuerydslProvider":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.data.querydsl.binding.QuerydslBindingsFactory'"}],"SpringDocConfiguration.QuerydslProvider#queryDslQuerydslPredicateOperationCustomizer":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.customizers.QuerydslPredicateOperationCustomizer; SearchStrategy: all) did not find any beans"}],"SpringDocConfiguration.SpringDocSpringDataWebPropertiesProvider":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'"}],"SpringDocConfiguration.SpringDocSpringDataWebPropertiesProvider#springDataWebPropertiesProvider":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringDataWebPropertiesProvider; SearchStrategy: all) did not find any beans"}],"SpringDocConfiguration.SpringDocWebFluxSupportConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'reactor.core.publisher.Flux'"}],"SpringDocConfiguration.SpringDocWebFluxSupportConfiguration#webFluxSupportConverter":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.converters.WebFluxSupportConverter; SearchStrategy: all) did not find any beans"}],"SpringDocConfiguration.WebConversionServiceConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.boot.autoconfigure.web.format.WebConversionService'"}],"SpringDocKotlinConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'kotlin.coroutines.Continuation'"},{"condition":"OnWebApplicationCondition","message":"@ConditionalOnWebApplication (required) found 'session' scope"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.api-docs.enabled) matched"},{"condition":"OnExpressionCondition","message":"@ConditionalOnExpression (#{${springdoc.api-docs.enabled:true} and ${springdoc.enable-kotlin:true}}) resulted in true"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration'"}],"SpringDocKotlinConfiguration#kotlinCoroutinesReturnTypeParser":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.parsers.KotlinCoroutinesReturnTypeParser; SearchStrategy: all) did not find any beans"}],"SpringDocKotlinConfiguration#nullableKotlinRequestParameterCustomizer":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.nullable-request-parameter-enabled) matched"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.customizers.ParameterCustomizer; SearchStrategy: all) did not find any beans"}],"SpringDocPageableConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.data.domain.Pageable'"},{"condition":"OnWebApplicationCondition","message":"@ConditionalOnWebApplication (required) found 'session' scope"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.api-docs.enabled) matched"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration'"}],"SpringDocPageableConfiguration#delegatingMethodParameterCustomizer":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.customizers.DelegatingMethodParameterCustomizer; SearchStrategy: all) did not find any beans"}],"SpringDocPageableConfiguration#pageableOpenAPIConverter":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.model-converters.pageable-converter.enabled) matched"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.converters.PageableOpenAPIConverter; SearchStrategy: all) did not find any beans"}],"SpringDocSecurityConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.security.web.SecurityFilterChain'"},{"condition":"OnWebApplicationCondition","message":"@ConditionalOnWebApplication (required) found 'session' scope"},{"condition":"OnExpressionCondition","message":"@ConditionalOnExpression (#{${springdoc.api-docs.enabled:true} and ${springdoc.enable-spring-security:true}}) resulted in true"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration'"}],"SpringDocSecurityConfiguration.SpringSecurityLoginEndpointConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'jakarta.servlet.Filter'"}],"SpringDocSortConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.data.domain.Sort'"},{"condition":"OnWebApplicationCondition","message":"@ConditionalOnWebApplication (required) found 'session' scope"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.api-docs.enabled) matched"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration'"}],"SpringDocSortConfiguration#sortOpenAPIConverter":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.model-converters.sort-converter.enabled) matched"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.converters.SortOpenAPIConverter; SearchStrategy: all) did not find any beans"}],"SpringDocConfigProperties":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.api-docs.enabled) matched"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration'"}],"SwaggerUiConfigParameters":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.swagger-ui.enabled) matched"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration'"}],"SwaggerUiConfigProperties":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.swagger-ui.enabled) matched"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration'"}],"SwaggerUiOAuthProperties":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.swagger-ui.enabled) matched"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration'"}],"MultipleOpenApiSupportConfiguration":[{"condition":"OnWebApplicationCondition","message":"found 'session' scope"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.api-docs.enabled) matched"},{"condition":"MultipleOpenApiSupportCondition","message":"AnyNestedCondition 1 matched 1 did not; NestedCondition on MultipleOpenApiSupportCondition.OnActuatorDifferentPort found non-matching nested conditions Management Port actual port type (SAME) did not match required type (DIFFERENT), @ConditionalOnProperty (springdoc.show-actuator) did not find property 'springdoc.show-actuator'; NestedCondition on MultipleOpenApiSupportCondition.OnMultipleOpenApiSupportCondition AnyNestedCondition 1 matched 1 did not; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupConfigProperty @ConditionalOnProperty (springdoc.group-configs[0].group) did not find property 'springdoc.group-configs[0].group'; NestedCondition on MultipleOpenApiGroupsCondition.OnGroupedOpenApiBean @ConditionalOnBean (types: org.springdoc.core.models.GroupedOpenApi; SearchStrategy: all) found beans 'systemGroupedOpenApi', 'allGroupedOpenApi', 'mpGroupedOpenApi', 'infraGroupedOpenApi', 'productGroupedOpenApi', 'shopGroupedOpenApi'"}],"MultipleOpenApiSupportConfiguration#multipleOpenApiResource":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.use-management-port=false) matched"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.webmvc.api.MultipleOpenApiWebMvcResource; SearchStrategy: all) did not find any beans"}],"SpringDocWebMvcConfiguration":[{"condition":"OnWebApplicationCondition","message":"found 'session' scope"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.api-docs.enabled) matched"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration'"}],"SpringDocWebMvcConfiguration#openApiResource":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.use-management-port=false) matched"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.webmvc.api.OpenApiWebMvcResource; SearchStrategy: all) did not find any beans"}],"SpringDocWebMvcConfiguration#requestBuilder":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.webmvc.core.service.RequestService; SearchStrategy: all) did not find any beans"}],"SpringDocWebMvcConfiguration#responseBuilder":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.service.GenericResponseService; SearchStrategy: all) did not find any beans"}],"SpringDocWebMvcConfiguration#springWebProvider":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringWebProvider; SearchStrategy: all) did not find any beans"}],"SpringDocWebMvcConfiguration.SpringDocWebMvcActuatorConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping'"}],"SpringDocWebMvcConfiguration.SpringDocWebMvcRouterConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.web.servlet.function.RouterFunction'"}],"SpringDocWebMvcConfiguration.SpringDocWebMvcRouterConfiguration#routerFunctionProvider":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.webmvc.core.providers.RouterFunctionWebMvcProvider; SearchStrategy: all) did not find any beans"}],"SwaggerConfig":[{"condition":"OnWebApplicationCondition","message":"found 'session' scope"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.swagger-ui.enabled) matched"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springdoc.core.configuration.SpringDocConfiguration; SearchStrategy: all) found bean 'org.springdoc.core.configuration.SpringDocConfiguration'"}],"SwaggerConfig#indexPageTransformer":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerIndexTransformer; SearchStrategy: all) did not find any beans"}],"SwaggerConfig#swaggerConfigResource":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.use-management-port=false) matched"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerConfigResource; SearchStrategy: all) did not find any beans"}],"SwaggerConfig#swaggerWebMvcConfigurer":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerWebMvcConfigurer; SearchStrategy: all) did not find any beans"}],"SwaggerConfig#swaggerWelcome":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.use-management-port=false) matched"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc; SearchStrategy: all) did not find any beans"}],"AuditEventsEndpointAutoConfiguration":[{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property"}],"BeansEndpointAutoConfiguration":[{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property"}],"BeansEndpointAutoConfiguration#beansEndpoint":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.beans.BeansEndpoint; SearchStrategy: all) did not find any beans"}],"CachesEndpointAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.cache.CacheManager'"},{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property"}],"CachesEndpointAutoConfiguration#cachesEndpoint":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) did not find any beans"}],"CachesEndpointAutoConfiguration#cachesEndpointWebExtension":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) found bean 'cachesEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpointWebExtension; SearchStrategy: all) did not find any beans"},{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property"}],"ConditionsReportEndpointAutoConfiguration":[{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property"}],"ConditionsReportEndpointAutoConfiguration#conditionsReportEndpoint":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint; SearchStrategy: current) did not find any beans"}],"ConfigurationPropertiesReportEndpointAutoConfiguration":[{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property"}],"ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpoint":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans"}],"ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpointWebExtension":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) found bean 'configurationPropertiesReportEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension; SearchStrategy: all) did not find any beans"},{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property"}],"RedisHealthContributorAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory'"},{"condition":"OnEnabledHealthIndicatorCondition","message":"@ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redissonConnectionFactory'"}],"RedisReactiveHealthContributorAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'reactor.core.publisher.Flux'"},{"condition":"OnEnabledHealthIndicatorCondition","message":"@ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redissonConnectionFactory'"}],"RedisReactiveHealthContributorAutoConfiguration#redisHealthContributor":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) did not find any beans"}],"EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans"}],"EndpointAutoConfiguration#endpointOperationParameterMapper":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans"}],"JacksonEndpointAutoConfiguration#endpointObjectMapper":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'com.fasterxml.jackson.databind.ObjectMapper', 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder'"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (management.endpoints.jackson.isolated-object-mapper) matched"}],"ServletEndpointManagementContextConfiguration":[{"condition":"OnWebApplicationCondition","message":"found 'session' scope"}],"ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet'"}],"WebEndpointAutoConfiguration":[{"condition":"OnWebApplicationCondition","message":"@ConditionalOnWebApplication (required) found 'session' scope"}],"WebEndpointAutoConfiguration#controllerEndpointDiscoverer":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans"}],"WebEndpointAutoConfiguration#endpointMediaTypes":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans"}],"WebEndpointAutoConfiguration#pathMappedEndpoints":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans"}],"WebEndpointAutoConfiguration#webEndpointDiscoverer":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans"}],"WebEndpointAutoConfiguration.WebEndpointServletConfiguration":[{"condition":"OnWebApplicationCondition","message":"found 'session' scope"}],"WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans"}],"WebMvcEndpointManagementContextConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet'"},{"condition":"OnWebApplicationCondition","message":"found 'session' scope"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet'"}],"WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans"}],"WebMvcEndpointManagementContextConfiguration#endpointObjectMapperWebMvcConfigurer":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper; SearchStrategy: all) found bean 'endpointObjectMapper'"}],"WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans"}],"EnvironmentEndpointAutoConfiguration":[{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property"}],"EnvironmentEndpointAutoConfiguration#environmentEndpoint":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) did not find any beans"}],"EnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) found bean 'environmentEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension; SearchStrategy: all) did not find any beans"},{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property"}],"HealthContributorAutoConfiguration#pingHealthContributor":[{"condition":"OnEnabledHealthIndicatorCondition","message":"@ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true"}],"HealthEndpointAutoConfiguration":[{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property"}],"HealthEndpointConfiguration#healthContributorRegistry":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans"}],"HealthEndpointConfiguration#healthEndpoint":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans"}],"HealthEndpointConfiguration#healthEndpointGroupMembershipValidator":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (management.endpoint.health.validate-group-membership=true) matched"}],"HealthEndpointConfiguration#healthEndpointGroups":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans"}],"HealthEndpointConfiguration#healthHttpCodeStatusMapper":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans"}],"HealthEndpointConfiguration#healthStatusAggregator":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans"}],"HealthEndpointWebExtensionConfiguration":[{"condition":"OnWebApplicationCondition","message":"found 'session' scope"},{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint'"}],"HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans"}],"HealthEndpointWebExtensionConfiguration.MvcAdditionalHealthEndpointPathsConfiguration":[{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'"}],"ReactiveHealthEndpointConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'reactor.core.publisher.Flux'"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint'"}],"ReactiveHealthEndpointConfiguration#reactiveHealthContributorRegistry":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry; SearchStrategy: all) did not find any beans"}],"InfoEndpointAutoConfiguration":[{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property"}],"InfoEndpointAutoConfiguration#infoEndpoint":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.info.InfoEndpoint; SearchStrategy: all) did not find any beans"}],"DataSourceHealthContributorAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource'"},{"condition":"OnEnabledHealthIndicatorCondition","message":"@ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'"}],"DataSourceHealthContributorAutoConfiguration#dbHealthContributor":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (names: dbHealthIndicator,dbHealthContributor; SearchStrategy: all) did not find any beans"}],"LogFileWebEndpointAutoConfiguration":[{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property"}],"LogFileWebEndpointAutoConfiguration#logFileWebEndpoint":[{"condition":"LogFileWebEndpointAutoConfiguration.LogFileCondition","message":"Log File found logging.file.name C:\\Users\\Administrator/logs/yshop-server.log"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LogFileWebEndpoint; SearchStrategy: all) did not find any beans"}],"LoggersEndpointAutoConfiguration":[{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property"}],"LoggersEndpointAutoConfiguration#loggersEndpoint":[{"condition":"LoggersEndpointAutoConfiguration.OnEnabledLoggingSystemCondition","message":"Logging System enabled"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LoggersEndpoint; SearchStrategy: all) did not find any beans"}],"HeapDumpWebEndpointAutoConfiguration":[{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property"}],"HeapDumpWebEndpointAutoConfiguration#heapDumpWebEndpoint":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.HeapDumpWebEndpoint; SearchStrategy: all) did not find any beans"}],"ThreadDumpEndpointAutoConfiguration":[{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property"}],"ThreadDumpEndpointAutoConfiguration#dumpEndpoint":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.ThreadDumpEndpoint; SearchStrategy: all) did not find any beans"}],"CompositeMeterRegistryAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry'"}],"JvmMetricsAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry'"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'prometheusMeterRegistry'"}],"JvmMetricsAutoConfiguration#classLoaderMetrics":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans"}],"JvmMetricsAutoConfiguration#jvmCompilationMetrics":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics; SearchStrategy: all) did not find any beans"}],"JvmMetricsAutoConfiguration#jvmGcMetrics":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans"}],"JvmMetricsAutoConfiguration#jvmHeapPressureMetrics":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics; SearchStrategy: all) did not find any beans"}],"JvmMetricsAutoConfiguration#jvmInfoMetrics":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics; SearchStrategy: all) did not find any beans"}],"JvmMetricsAutoConfiguration#jvmMemoryMetrics":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans"}],"JvmMetricsAutoConfiguration#jvmThreadMetrics":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans"}],"LogbackMetricsAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory'"},{"condition":"LogbackMetricsAutoConfiguration.LogbackLoggingCondition","message":"LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'prometheusMeterRegistry'"}],"LogbackMetricsAutoConfiguration#logbackMetrics":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans"}],"MetricsAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed'"}],"MetricsAutoConfiguration#micrometerClock":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans"}],"MetricsEndpointAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed'"},{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property"}],"MetricsEndpointAutoConfiguration#metricsEndpoint":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'prometheusMeterRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.MetricsEndpoint; SearchStrategy: all) did not find any beans"}],"SystemMetricsAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry'"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'prometheusMeterRegistry'"}],"SystemMetricsAutoConfiguration#diskSpaceMetrics":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder; SearchStrategy: all) did not find any beans"}],"SystemMetricsAutoConfiguration#fileDescriptorMetrics":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans"}],"SystemMetricsAutoConfiguration#processorMetrics":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans"}],"SystemMetricsAutoConfiguration#uptimeMetrics":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans"}],"CacheMeterBinderProvidersConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder'"}],"CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.springframework.cache.caffeine.CaffeineCache', 'com.github.benmanes.caffeine.cache.Cache'"}],"CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.springframework.cache.jcache.JCacheCache', 'javax.cache.CacheManager'"}],"CacheMeterBinderProvidersConfiguration.RedisCacheMeterBinderProviderConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.data.redis.cache.RedisCache'"}],"CacheMetricsAutoConfiguration":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) found bean 'redisCacheManager'"}],"CacheMetricsRegistrarConfiguration":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'prometheusMeterRegistry', 'caffeineCacheMeterBinderProvider', 'redisCacheMeterBinderProvider', 'jCacheCacheMeterBinderProvider'"}],"RepositoryMetricsAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.data.repository.Repository'"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'prometheusMeterRegistry'"}],"RepositoryMetricsAutoConfiguration#metricsRepositoryMethodInvocationListener":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener; SearchStrategy: all) did not find any beans"}],"RepositoryMetricsAutoConfiguration#repositoryTagsProvider":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider; SearchStrategy: all) did not find any beans"}],"PrometheusMetricsExportAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'io.micrometer.prometheus.PrometheusMeterRegistry'"},{"condition":"OnMetricsExportEnabledCondition","message":"@ConditionalOnEnabledMetricsExport management.defaults.metrics.export.enabled is considered true"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'"}],"PrometheusMetricsExportAutoConfiguration#collectorRegistry":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: io.prometheus.client.CollectorRegistry; SearchStrategy: all) did not find any beans"}],"PrometheusMetricsExportAutoConfiguration#prometheusConfig":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: io.micrometer.prometheus.PrometheusConfig; SearchStrategy: all) did not find any beans"}],"PrometheusMetricsExportAutoConfiguration#prometheusMeterRegistry":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: io.micrometer.prometheus.PrometheusMeterRegistry; SearchStrategy: all) did not find any beans"}],"PrometheusMetricsExportAutoConfiguration.PrometheusScrapeEndpointConfiguration":[{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property"}],"PrometheusMetricsExportAutoConfiguration.PrometheusScrapeEndpointConfiguration#prometheusEndpoint":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.export.prometheus.PrometheusScrapeEndpoint; SearchStrategy: all) did not find any beans"}],"DataSourcePoolMetricsAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry'"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'prometheusMeterRegistry', 'dataSource'"}],"DataSourcePoolMetricsAutoConfiguration.DataSourcePoolMetadataMetricsConfiguration":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider; SearchStrategy: all) found bean 'hikariPoolDataSourceMetadataProvider'"}],"DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource'"}],"StartupTimeMetricsListenerAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry'"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'prometheusMeterRegistry'"}],"StartupTimeMetricsListenerAutoConfiguration#startupTimeMetrics":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener; SearchStrategy: all) did not find any beans"}],"TaskExecutorMetricsAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics'"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: java.util.concurrent.Executor,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'prometheusMeterRegistry', 'applicationTaskExecutor', 'taskScheduler'"}],"TomcatMetricsAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager'"},{"condition":"OnWebApplicationCondition","message":"@ConditionalOnWebApplication (required) found 'session' scope"}],"TomcatMetricsAutoConfiguration#tomcatMetricsBinder":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'prometheusMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans"}],"ObservationAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'io.micrometer.observation.ObservationRegistry'"}],"ObservationAutoConfiguration#observationRegistry":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) did not find any beans"}],"ObservationAutoConfiguration.MeterObservationHandlerConfiguration":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'prometheusMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.observation.MeterObservationHandler; SearchStrategy: all) did not find any beans"}],"ObservationAutoConfiguration.MeterObservationHandlerConfiguration.OnlyMetricsMeterObservationHandlerConfiguration":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans"}],"ObservationAutoConfiguration.ObservedAspectConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.aspectj.weaver.Advice'"}],"ObservationAutoConfiguration.ObservedAspectConfiguration#observedAspect":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: io.micrometer.observation.aop.ObservedAspect; SearchStrategy: all) did not find any beans"}],"ObservationAutoConfiguration.OnlyMetricsConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry'; @ConditionalOnMissingClass did not find unwanted class 'io.micrometer.tracing.Tracer'"}],"HttpClientObservationsAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'io.micrometer.observation.Observation'"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry'"}],"HttpClientObservationsAutoConfiguration.MeterFilterConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry'"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'prometheusMeterRegistry'"}],"RestClientObservationConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.web.client.RestClient'"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) found bean 'restClientBuilder'"}],"RestTemplateObservationConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate'"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder'"}],"WebClientObservationConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient'"}],"WebMvcObservationAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.springframework.web.servlet.DispatcherServlet', 'io.micrometer.observation.Observation'"},{"condition":"OnWebApplicationCondition","message":"found 'session' scope"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry'"}],"WebMvcObservationAutoConfiguration#webMvcObservationFilter":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.web.filter.ServerHttpObservationFilter; SearchStrategy: all) did not find any beans"}],"WebMvcObservationAutoConfiguration.MeterFilterConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry'"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'prometheusMeterRegistry'"}],"QuartzEndpointAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.quartz.Scheduler'"},{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property"}],"ScheduledTasksEndpointAutoConfiguration":[{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property"}],"ScheduledTasksEndpointAutoConfiguration#scheduledTasksEndpoint":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint; SearchStrategy: all) did not find any beans"}],"ScheduledTasksObservabilityAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler'"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: io.micrometer.observation.ObservationRegistry; SearchStrategy: all) found bean 'observationRegistry'"}],"SecurityRequestMatchersManagementContextConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.security.web.util.matcher.RequestMatcher'"},{"condition":"OnWebApplicationCondition","message":"found 'session' scope"}],"SecurityRequestMatchersManagementContextConfiguration.MvcRequestMatcherConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet'"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath; SearchStrategy: all) found bean 'dispatcherServletRegistration'"}],"SecurityRequestMatchersManagementContextConfiguration.MvcRequestMatcherConfiguration#requestMatcherProvider":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet'"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.security.servlet.RequestMatcherProvider; SearchStrategy: all) did not find any beans"}],"DiskSpaceHealthContributorAutoConfiguration":[{"condition":"OnEnabledHealthIndicatorCondition","message":"@ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true"}],"DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans"}],"HttpExchangesEndpointAutoConfiguration":[{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property"}],"MappingsEndpointAutoConfiguration":[{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property"}],"MappingsEndpointAutoConfiguration.ServletWebConfiguration":[{"condition":"OnWebApplicationCondition","message":"found 'session' scope"}],"MappingsEndpointAutoConfiguration.ServletWebConfiguration.SpringMvcConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet'"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'"}],"ManagementContextAutoConfiguration.SameManagementContextConfiguration":[{"condition":"OnManagementPortCondition","message":"Management Port actual port type (SAME) matched required type"}],"ServletManagementContextAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'jakarta.servlet.Servlet'"},{"condition":"OnWebApplicationCondition","message":"found 'session' scope"}],"AopAutoConfiguration":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.aop.auto=true) matched"}],"AopAutoConfiguration.AspectJAutoProxyingConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.aspectj.weaver.Advice'"}],"AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.aop.proxy-target-class=true) matched"}],"ApplicationAvailabilityAutoConfiguration#applicationAvailability":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.availability.ApplicationAvailability; SearchStrategy: all) did not find any beans"}],"RedisCacheConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory'"},{"condition":"CacheCondition","message":"Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration REDIS cache type"}],"LifecycleAutoConfiguration#defaultLifecycleProcessor":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans"}],"PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans"}],"PersistenceExceptionTranslationAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor'"}],"PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans"}],"RedisAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations'"}],"RedisAutoConfiguration#redisConnectionDetails":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails; SearchStrategy: all) did not find any beans"}],"RedisReactiveAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux'"}],"RedisReactiveAutoConfiguration#reactiveRedisTemplate":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redissonConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans"}],"RedisReactiveAutoConfiguration#reactiveStringRedisTemplate":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redissonConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans"}],"SpringDataWebAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer'"},{"condition":"OnWebApplicationCondition","message":"found 'session' scope"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans"}],"SpringDataWebAutoConfiguration#pageableCustomizer":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans"}],"SpringDataWebAutoConfiguration#sortCustomizer":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans"}],"GsonAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'com.google.gson.Gson'"}],"GsonAutoConfiguration#gson":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans"}],"GsonAutoConfiguration#gsonBuilder":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans"}],"GsonHttpMessageConvertersConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'com.google.gson.Gson'"}],"HttpMessageConvertersAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter'"},{"condition":"HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition","message":"NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication not a reactive web application"}],"HttpMessageConvertersAutoConfiguration#messageConverters":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans"}],"HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter'"}],"HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans"}],"JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper'"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper'"}],"JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans"}],"CodecsAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.springframework.http.codec.CodecConfigurer', 'org.springframework.web.reactive.function.client.WebClient'"}],"CodecsAutoConfiguration.JacksonCodecConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper'"}],"CodecsAutoConfiguration.JacksonCodecConfiguration#jacksonCodecCustomizer":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper'"}],"JacksonAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper'"}],"JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder'"}],"JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder'"}],"JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans"}],"JacksonAutoConfiguration.JacksonObjectMapperConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder'"}],"JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans"}],"JacksonAutoConfiguration.ParameterNamesModuleConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule'"}],"JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans"}],"DataSourceAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType'"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans"}],"DataSourceConfiguration.Hikari":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource'"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched"}],"DataSourceJmxConfiguration":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.jmx.enabled=true) matched"}],"DataSourceJmxConfiguration.Hikari":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource'"}],"DataSourceTransactionManagerAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager'"}],"DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration":[{"condition":"OnBeanCondition","message":"@ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'"}],"DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans"}],"JdbcClientAutoConfiguration":[{"condition":"OnBeanCondition","message":"@ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) found a single bean 'namedParameterJdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.simple.JdbcClient; SearchStrategy: all) did not find any beans"}],"JdbcTemplateAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate'"},{"condition":"OnBeanCondition","message":"@ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'"}],"JdbcTemplateConfiguration":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans"}],"NamedParameterJdbcTemplateConfiguration":[{"condition":"OnBeanCondition","message":"@ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a single bean 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans"}],"DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource'"}],"NettyAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'io.netty.util.NettyRuntime'"}],"ReactorAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'reactor.core.publisher.Hooks'"}],"ReactorNettyConfigurations.ReactorResourceFactoryConfiguration#reactorResourceFactory":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.http.client.ReactorResourceFactory; SearchStrategy: all) did not find any beans"}],"ReactiveSecurityAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'reactor.core.publisher.Flux', 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity', 'org.springframework.security.web.server.WebFilterChainProxy', 'org.springframework.web.reactive.config.WebFluxConfigurer'"}],"SecurityAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher'"}],"SecurityAutoConfiguration#authenticationEventPublisher":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationEventPublisher; SearchStrategy: all) did not find any beans"}],"SecurityFilterAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer', 'org.springframework.security.config.http.SessionCreationPolicy'"},{"condition":"OnWebApplicationCondition","message":"found 'session' scope"}],"SecurityFilterAutoConfiguration#securityFilterChainRegistration":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (names: springSecurityFilterChain; SearchStrategy: all) found bean 'springSecurityFilterChain'"}],"SpringBootWebSecurityConfiguration":[{"condition":"OnWebApplicationCondition","message":"found 'session' scope"}],"SpringBootWebSecurityConfiguration.WebSecurityEnablerConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity'"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (names: springSecurityFilterChain; SearchStrategy: all) did not find any beans"}],"DataSourceInitializationConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator'"},{"condition":"OnBeanCondition","message":"@ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a single bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans"}],"SqlInitializationAutoConfiguration":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.sql.init.enabled) matched"},{"condition":"SqlInitializationAutoConfiguration.SqlInitializationModeCondition","message":"NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode'"}],"SslAutoConfiguration#sslBundleRegistry":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.ssl.SslBundleRegistry,org.springframework.boot.ssl.SslBundles; SearchStrategy: all) did not find any beans"}],"TaskExecutionAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor'"}],"TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilder":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) did not find any beans"},{"condition":"OnThreadingCondition","message":"@ConditionalOnThreading found PLATFORM"}],"TaskExecutorConfigurations.TaskExecutorBuilderConfiguration#taskExecutorBuilder":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans"}],"TaskExecutorConfigurations.TaskExecutorConfiguration":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans"}],"TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutor":[{"condition":"OnThreadingCondition","message":"@ConditionalOnThreading found PLATFORM"}],"TaskExecutorConfigurations.ThreadPoolTaskExecutorBuilderConfiguration#threadPoolTaskExecutorBuilder":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder,org.springframework.boot.task.ThreadPoolTaskExecutorBuilder; SearchStrategy: all) did not find any beans"}],"TaskSchedulingAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler'"}],"TaskSchedulingAutoConfiguration#scheduledBeanLazyInitializationExcludeFilter":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) found bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'"}],"TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilder":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) did not find any beans"},{"condition":"OnThreadingCondition","message":"@ConditionalOnThreading found PLATFORM"}],"TaskSchedulingConfigurations.TaskSchedulerBuilderConfiguration#taskSchedulerBuilder":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans"}],"TaskSchedulingConfigurations.TaskSchedulerConfiguration":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) found bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'; @ConditionalOnMissingBean (types: org.springframework.scheduling.TaskScheduler,java.util.concurrent.ScheduledExecutorService; SearchStrategy: all) did not find any beans"}],"TaskSchedulingConfigurations.TaskSchedulerConfiguration#taskScheduler":[{"condition":"OnThreadingCondition","message":"@ConditionalOnThreading found PLATFORM"}],"TaskSchedulingConfigurations.ThreadPoolTaskSchedulerBuilderConfiguration#threadPoolTaskSchedulerBuilder":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder,org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder; SearchStrategy: all) did not find any beans"}],"TemplateEngineConfigurations.DefaultTemplateEngineConfiguration#templateEngine":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.thymeleaf.spring6.ISpringTemplateEngine; SearchStrategy: all) did not find any beans"}],"ThymeleafAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.thymeleaf.templatemode.TemplateMode', 'org.thymeleaf.spring6.SpringTemplateEngine'"}],"ThymeleafAutoConfiguration.DefaultTemplateResolverConfiguration":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (names: defaultTemplateResolver; SearchStrategy: all) did not find any beans"}],"ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration":[{"condition":"OnWebApplicationCondition","message":"found 'session' scope"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.thymeleaf.enabled) matched"}],"ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration#resourceUrlEncodingFilter":[{"condition":"OnEnabledResourceChainCondition","message":"@ConditionalOnEnabledResourceChain found class org.webjars.WebJarAssetLocator"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.web.servlet.resource.ResourceUrlEncodingFilter; SearchStrategy: all) did not find any beans"}],"ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration.ThymeleafViewResolverConfiguration#thymeleafViewResolver":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (names: thymeleafViewResolver; SearchStrategy: all) did not find any beans"}],"TransactionAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager'"}],"TransactionAutoConfiguration.TransactionTemplateConfiguration":[{"condition":"OnBeanCondition","message":"@ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a single bean 'transactionManager'"}],"TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans"}],"TransactionManagerCustomizationAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager'"}],"TransactionManagerCustomizationAutoConfiguration#platformTransactionManagerCustomizers":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans"}],"ValidationAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'jakarta.validation.executable.ExecutableValidator'"},{"condition":"OnResourceCondition","message":"@ConditionalOnResource found location classpath:META-INF/services/jakarta.validation.spi.ValidationProvider"}],"ValidationAutoConfiguration#defaultValidator":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: jakarta.validation.Validator; SearchStrategy: all) did not find any beans"}],"ValidationAutoConfiguration#methodValidationPostProcessor":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans"}],"RestClientAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.web.client.RestClient'"},{"condition":"NotReactiveWebApplicationCondition","message":"NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication not a reactive web application"}],"RestClientAutoConfiguration#httpMessageConvertersRestClientCustomizer":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer; SearchStrategy: all) did not find any beans"}],"RestClientAutoConfiguration#restClientBuilder":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.web.client.RestClient$Builder; SearchStrategy: all) did not find any beans"}],"RestClientAutoConfiguration#restClientBuilderConfigurer":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer; SearchStrategy: all) did not find any beans"}],"RestClientAutoConfiguration#restClientSsl":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestClientSsl; SearchStrategy: all) did not find any beans"}],"RestTemplateAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate'"},{"condition":"NotReactiveWebApplicationCondition","message":"NoneNestedConditions 0 matched 1 did not; NestedCondition on NotReactiveWebApplicationCondition.ReactiveWebApplication not a reactive web application"}],"RestTemplateAutoConfiguration#restTemplateBuilder":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans"}],"EmbeddedWebServerFactoryCustomizerAutoConfiguration":[{"condition":"OnWebApplicationCondition","message":"@ConditionalOnWebApplication (required) found 'session' scope"},{"condition":"OnWarDeploymentCondition","message":"@ConditionalOnWarDeployment the application is not deployed as a WAR file."}],"EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'reactor.netty.http.server.HttpServer'"}],"EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol'"}],"ClientHttpConnectorAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient'"}],"ClientHttpConnectorAutoConfiguration#webClientHttpConnector":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.http.client.reactive.ClientHttpConnector; SearchStrategy: all) did not find any beans"}],"ClientHttpConnectorAutoConfiguration#webClientHttpConnectorCustomizer":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.http.client.reactive.ClientHttpConnector; SearchStrategy: all) found bean 'webClientHttpConnector'"}],"ClientHttpConnectorFactoryConfiguration.ReactorNetty":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'reactor.netty.http.client.HttpClient'"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory; SearchStrategy: all) did not find any beans"}],"WebClientAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient'"}],"WebClientAutoConfiguration#webClientBuilder":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.web.reactive.function.client.WebClient$Builder; SearchStrategy: all) did not find any beans"}],"WebClientAutoConfiguration#webClientSsl":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.boot.ssl.SslBundles; SearchStrategy: all) found bean 'sslBundleRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientSsl; SearchStrategy: all) did not find any beans"}],"WebClientAutoConfiguration.WebClientCodecsConfiguration":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.boot.web.codec.CodecCustomizer; SearchStrategy: all) found beans 'jacksonCodecCustomizer', 'defaultCodecCustomizer'"}],"WebClientAutoConfiguration.WebClientCodecsConfiguration#exchangeStrategiesCustomizer":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer; SearchStrategy: all) did not find any beans"}],"DispatcherServletAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet'"},{"condition":"OnWebApplicationCondition","message":"found 'session' scope"}],"DispatcherServletAutoConfiguration.DispatcherServletConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration'"},{"condition":"DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition","message":"Default DispatcherServlet did not find dispatcher servlet beans"}],"DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'jakarta.servlet.ServletRegistration'"},{"condition":"DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition","message":"DispatcherServlet Registration did not find servlet registration bean"}],"DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'"}],"HttpEncodingAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter'"},{"condition":"OnWebApplicationCondition","message":"found 'session' scope"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (server.servlet.encoding.enabled) matched"}],"HttpEncodingAutoConfiguration#characterEncodingFilter":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans"}],"MultipartAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'jakarta.servlet.MultipartConfigElement'"},{"condition":"OnWebApplicationCondition","message":"found 'session' scope"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.servlet.multipart.enabled) matched"}],"MultipartAutoConfiguration#multipartConfigElement":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: jakarta.servlet.MultipartConfigElement; SearchStrategy: all) did not find any beans"}],"MultipartAutoConfiguration#multipartResolver":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans"}],"ServletWebServerFactoryAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'jakarta.servlet.ServletRequest'"},{"condition":"OnWebApplicationCondition","message":"found 'session' scope"}],"ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat'"}],"ServletWebServerFactoryConfiguration.EmbeddedTomcat":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol'"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans"}],"WebMvcAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer'"},{"condition":"OnWebApplicationCondition","message":"found 'session' scope"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans"}],"WebMvcAutoConfiguration#formContentFilter":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched"},{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans"}],"WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans"}],"WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans"}],"WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans"}],"WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration":[{"condition":"OnEnabledResourceChainCondition","message":"@ConditionalOnEnabledResourceChain found class org.webjars.WebJarAssetLocator"}],"WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans"}],"WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans"}],"WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans"}],"ErrorMvcAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet'"},{"condition":"OnWebApplicationCondition","message":"found 'session' scope"}],"ErrorMvcAutoConfiguration#basicErrorController":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans"}],"ErrorMvcAutoConfiguration#errorAttributes":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans"}],"ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans"}],"ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (server.error.whitelabel.enabled) matched"},{"condition":"ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition","message":"ErrorTemplate Missing did not find error template view"}],"ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans"}],"ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans"}],"WebSocketMessagingAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer'"},{"condition":"OnWebApplicationCondition","message":"found 'session' scope"}],"WebSocketServletAutoConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer'"},{"condition":"OnWebApplicationCondition","message":"found 'session' scope"}],"WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci'"}],"WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans"}]},"negativeMatches":{"YshopApiLogAutoConfiguration#apiAccessLogFilter":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (yshop.access-log.enable) found different value in property 'enable'"}],"matched":[]},"YshopLock4jConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.baomidou.lock.annotation.Lock4j'"}],"matched":[]},"YshopRabbitMQAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate'"}],"matched":[]},"YshopRedisMQConsumerAutoConfiguration#redisMessageListenerContainer":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: co.yixiang.yshop.framework.mq.redis.core.pubsub.AbstractRedisChannelMessageListener; SearchStrategy: all) did not find any beans of type co.yixiang.yshop.framework.mq.redis.core.pubsub.AbstractRedisChannelMessageListener"}],"matched":[]},"YshopRedisMQConsumerAutoConfiguration#redisPendingMessageResendJob":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: co.yixiang.yshop.framework.mq.redis.core.stream.AbstractRedisStreamMessageListener; SearchStrategy: all) did not find any beans of type co.yixiang.yshop.framework.mq.redis.core.stream.AbstractRedisStreamMessageListener"}],"matched":[]},"YshopRedisMQConsumerAutoConfiguration#redisStreamMessageListenerContainer":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: co.yixiang.yshop.framework.mq.redis.core.stream.AbstractRedisStreamMessageListener; SearchStrategy: all) did not find any beans of type co.yixiang.yshop.framework.mq.redis.core.stream.AbstractRedisStreamMessageListener"}],"matched":[]},"YshopMybatisAutoConfiguration#keyGenerator":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (mybatis-plus.global-config.db-config.id-type=INPUT) found different value in property 'id-type'"}],"matched":[]},"YshopTenantAutoConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (yshop.tenant.enable) found different value in property 'enable'"}],"matched":[]},"YshopWebAutoConfiguration#demoFilter":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (yshop.demo=true) found different value in property 'yshop.demo'"}],"matched":[]},"YshopWebSocketAutoConfiguration.KafkaWebSocketMessageSenderConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (yshop.websocket.sender-type=kafka) found different value in property 'sender-type'"}],"matched":[]},"YshopWebSocketAutoConfiguration.RabbitMQWebSocketMessageSenderConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (yshop.websocket.sender-type=rabbitmq) found different value in property 'sender-type'"}],"matched":[]},"YshopWebSocketAutoConfiguration.RedisWebSocketMessageSenderConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (yshop.websocket.sender-type=redis) found different value in property 'sender-type'"}],"matched":[]},"YshopWebSocketAutoConfiguration.RocketMQWebSocketMessageSenderConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (yshop.websocket.sender-type=rocketmq) found different value in property 'sender-type'"}],"matched":[]},"YshopXssAutoConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (yshop.xss.enable=true) found different value in property 'enable'"}],"matched":[]},"DruidDataSourceAutoConfigure#dataSource":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) found beans of type 'javax.sql.DataSource' dataSource"}],"matched":[]},"DruidFilterConfiguration#commonsLogFilter":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.datasource.druid.filter.commons-log.enabled) did not find property 'enabled'"}],"matched":[]},"DruidFilterConfiguration#configFilter":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.datasource.druid.filter.config.enabled) did not find property 'enabled'"}],"matched":[]},"DruidFilterConfiguration#encodingConvertFilter":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.datasource.druid.filter.encoding.enabled) did not find property 'enabled'"}],"matched":[]},"DruidFilterConfiguration#log4j2Filter":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.datasource.druid.filter.log4j2.enabled) did not find property 'enabled'"}],"matched":[]},"DruidFilterConfiguration#log4jFilter":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.datasource.druid.filter.log4j.enabled) did not find property 'enabled'"}],"matched":[]},"DruidFilterConfiguration#slf4jLogFilter":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.datasource.druid.filter.slf4j.enabled) did not find property 'enabled'"}],"matched":[]},"DruidFilterConfiguration#wallConfig":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.datasource.druid.filter.wall.enabled) did not find property 'enabled'"}],"matched":[]},"DruidFilterConfiguration#wallFilter":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.datasource.druid.filter.wall.enabled) did not find property 'enabled'"}],"matched":[]},"DruidSpringAopConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.datasource.druid.aop-patterns) did not find property 'spring.datasource.druid.aop-patterns'"}],"matched":[]},"DynamicDataSourceCreatorAutoConfiguration.AtomikosDataSourceCreatorConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.atomikos.jdbc.AtomikosDataSourceBean'"}],"matched":[]},"DynamicDataSourceCreatorAutoConfiguration.BeeCpDataSourceCreatorConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'cn.beecp.BeeDataSource'"}],"matched":[]},"DynamicDataSourceCreatorAutoConfiguration.Dbcp2DataSourceCreatorConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource'"}],"matched":[]},"IdentifierGeneratorAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.cloud.commons.util.InetUtils'"}],"matched":[]},"MybatisPlusAutoConfiguration.MapperScannerRegistrarNotFoundConfiguration":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.mybatis.spring.mapper.MapperFactoryBean,org.mybatis.spring.mapper.MapperScannerConfigurer; SearchStrategy: all) found beans of type 'org.mybatis.spring.mapper.MapperScannerConfigurer' co.yixiang.yshop.framework.mybatis.config.YshopMybatisAutoConfiguration#MapperScannerRegistrar#0"}],"matched":[]},"MybatisPlusInnerInterceptorAutoConfiguration":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor; SearchStrategy: all) found beans of type 'com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor' mybatisPlusInterceptor"}],"matched":[]},"MybatisPlusLanguageDriverAutoConfiguration.FreeMarkerConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required classes 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver', 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriverConfig'"}],"matched":[]},"MybatisPlusLanguageDriverAutoConfiguration.LegacyFreeMarkerConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver'"}],"matched":[]},"MybatisPlusLanguageDriverAutoConfiguration.LegacyVelocityConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.mybatis.scripting.velocity.Driver'"}],"matched":[]},"MybatisPlusLanguageDriverAutoConfiguration.ThymeleafConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.mybatis.scripting.thymeleaf.ThymeleafLanguageDriver'"}],"matched":[]},"MybatisPlusLanguageDriverAutoConfiguration.VelocityConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required classes 'org.mybatis.scripting.velocity.VelocityLanguageDriver', 'org.mybatis.scripting.velocity.VelocityLanguageDriverConfig'"}],"matched":[]},"WxMaInJedisConfigStorageConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (wx.miniapp.config-storage.type=jedis) found different value in property 'type'"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'redis.clients.jedis.JedisPool', 'redis.clients.jedis.JedisPoolConfig'"}]},"WxMaInMemoryConfigStorageConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (wx.miniapp.config-storage.type=memory) found different value in property 'type'"}],"matched":[]},"WxMaInRedissonConfigStorageConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (wx.miniapp.config-storage.type=redisson) found different value in property 'type'"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.redisson.Redisson', 'org.redisson.api.RedissonClient'"}]},"FuiouPaymentPlatform":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.egzosn.pay.fuiou.api.FuiouPayConfigStorage'"}],"matched":[]},"PayoneerPaymentPlatform":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.egzosn.pay.payoneer.api.PayoneerConfigStorage'"}],"matched":[]},"PaypalPaymentPlatform":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.egzosn.pay.paypal.api.PayPalConfigStorage'"}],"matched":[]},"PaypalV2PaymentPlatform":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.egzosn.pay.paypal.api.PayPalConfigStorage'"}],"matched":[]},"UnionPaymentPlatform":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.egzosn.pay.union.api.UnionPayConfigStorage'"}],"matched":[]},"YoudianPaymentPlatform":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.egzosn.pay.wx.youdian.api.WxYouDianPayConfigStorage'"}],"matched":[]},"EasyTransMybatisPlusConfig#mybatisPlusTransableRegister":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (easy-trans.is-enable-auto=true) did not find property 'easy-trans.is-enable-auto'"}],"matched":[]},"TransServiceConfig#container":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (easy-trans.is-enable-redis=true) did not find property 'easy-trans.is-enable-redis'"}],"matched":[]},"TransServiceConfig#listenerAdapter":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (easy-trans.is-enable-redis=true) did not find property 'easy-trans.is-enable-redis'"}],"matched":[]},"TransServiceConfig#redisCacheService":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (easy-trans.is-enable-redis=true) did not find property 'easy-trans.is-enable-redis'"}],"matched":[]},"TransServiceConfig#restTemplate":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.web.client.RestTemplate; SearchStrategy: all) found beans of type 'org.springframework.web.client.RestTemplate' restTemplate"}],"matched":[]},"TransServiceConfig#transMessageListener":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (easy-trans.is-enable-redis=true) did not find property 'easy-trans.is-enable-redis'"}],"matched":[]},"Knife4jAutoConfiguration#corsFilter":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (knife4j.cors=true) did not find property 'knife4j.cors'"}],"matched":[]},"Knife4jAutoConfiguration#productionSecurityFilter":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (knife4j.production=true) did not find property 'knife4j.production'"}],"matched":[]},"Knife4jAutoConfiguration#securityBasicAuthFilter":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (knife4j.basic.enable=true) did not find property 'knife4j.basic.enable'"}],"matched":[]},"MybatisPlusJoinAutoConfiguration#mpjSqlInjector":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: com.baomidou.mybatisplus.core.injector.ISqlInjector; SearchStrategy: all) did not find any beans of type com.baomidou.mybatisplus.core.injector.ISqlInjector"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean'"}]},"LogRecordProxyAutoConfiguration#parseFunction":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.mzt.logapi.service.IParseFunction; SearchStrategy: all) found beans of type 'com.mzt.logapi.service.IParseFunction' adminUserParseFunction, areaParseFunction, booleanParseFunction, deptParseFunction, postParseFunction, sexParseFunction"}],"matched":[]},"AjCaptchaStorageAutoConfiguration#captchaCacheService":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: com.xingyuv.captcha.service.CaptchaCacheService; SearchStrategy: all) found beans of type 'com.xingyuv.captcha.service.CaptchaCacheService' captchaCacheService"}],"matched":[]},"JustAuthStateCacheConfiguration.Custom":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (justauth.cache.type=custom) found different value in property 'justauth.cache.type'"}],"matched":[]},"JustAuthStateCacheConfiguration.Default":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (justauth.cache.type=default) found different value in property 'justauth.cache.type'"}],"matched":[]},"SpringBootAdminClientCloudFoundryAutoConfiguration":{"notMatched":[{"condition":"OnCloudPlatformCondition","message":"@ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY"}],"matched":[{"condition":"OnWebApplicationCondition","message":"@ConditionalOnWebApplication (required) found 'session' scope"},{"condition":"SpringBootAdminClientEnabledCondition","message":"matched"}]},"AdminServerCloudFoundryAutoConfiguration":{"notMatched":[{"condition":"OnCloudPlatformCondition","message":"@ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY"}],"matched":[]},"AdminServerHazelcastAutoConfiguration":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnSingleCandidate did not find required type 'com.hazelcast.core.HazelcastInstance'"}],"matched":[]},"AdminServerNotifierAutoConfiguration.CompositeNotifierConfiguration":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: de.codecentric.boot.admin.server.notify.Notifier; SearchStrategy: all) did not find any beans of type de.codecentric.boot.admin.server.notify.Notifier"}],"matched":[]},"AdminServerNotifierAutoConfiguration.DingTalkNotifierConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.boot.admin.notify.dingtalk.webhook-url) did not find property 'webhook-url'"}],"matched":[]},"AdminServerNotifierAutoConfiguration.DiscordNotifierConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.boot.admin.notify.discord.webhook-url) did not find property 'webhook-url'"}],"matched":[]},"AdminServerNotifierAutoConfiguration.FeiShuNotifierConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.boot.admin.notify.feishu.webhook-url) did not find property 'webhook-url'"}],"matched":[]},"AdminServerNotifierAutoConfiguration.FilteringNotifierWebConfiguration":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnSingleCandidate (types: de.codecentric.boot.admin.server.notify.filter.FilteringNotifier; SearchStrategy: all) did not find any beans"}],"matched":[]},"AdminServerNotifierAutoConfiguration.HipchatNotifierConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.boot.admin.notify.hipchat.url) did not find property 'url'"}],"matched":[]},"AdminServerNotifierAutoConfiguration.LetsChatNotifierConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.boot.admin.notify.letschat.url) did not find property 'url'"}],"matched":[]},"AdminServerNotifierAutoConfiguration.MailNotifierConfiguration":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.mail.MailSender; SearchStrategy: all) did not find any beans of type org.springframework.mail.MailSender"}],"matched":[]},"AdminServerNotifierAutoConfiguration.MicrosoftTeamsNotifierConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.boot.admin.notify.ms-teams.webhook-url) did not find property 'webhook-url'"}],"matched":[]},"AdminServerNotifierAutoConfiguration.NotifierTriggerConfiguration":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: de.codecentric.boot.admin.server.notify.Notifier; SearchStrategy: all) did not find any beans of type de.codecentric.boot.admin.server.notify.Notifier"}],"matched":[]},"AdminServerNotifierAutoConfiguration.OpsGenieNotifierConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.boot.admin.notify.opsgenie.api-key) did not find property 'api-key'"}],"matched":[]},"AdminServerNotifierAutoConfiguration.PagerdutyNotifierConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.boot.admin.notify.pagerduty.service-key) did not find property 'service-key'"}],"matched":[]},"AdminServerNotifierAutoConfiguration.RocketChatNotifierConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.boot.admin.notify.rocketchat.url) did not find property 'url'"}],"matched":[]},"AdminServerNotifierAutoConfiguration.SlackNotifierConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.boot.admin.notify.slack.webhook-url) did not find property 'webhook-url'"}],"matched":[]},"AdminServerNotifierAutoConfiguration.TelegramNotifierConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.boot.admin.notify.telegram.auth-token) did not find property 'auth-token'"}],"matched":[]},"RedissonAutoConfiguration#redisTemplate":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) found beans named redisTemplate"}],"matched":[]},"SpringDocConfiguration#openAPIBuilder":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.service.OpenAPIService; SearchStrategy: all) found beans of type 'org.springdoc.core.service.OpenAPIService' openApiBuilder"}],"matched":[]},"SpringDocConfiguration#propertiesResolverForSchema":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.api-docs.resolve-schema-properties) did not find property 'springdoc.api-docs.resolve-schema-properties'"}],"matched":[]},"SpringDocConfiguration#propertyCustomizingConverter":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springdoc.core.customizers.PropertyCustomizer; SearchStrategy: all) did not find any beans of type org.springdoc.core.customizers.PropertyCustomizer"}],"matched":[]},"SpringDocConfiguration#springdocBeanFactoryPostProcessor2":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnMissingClass found unwanted class 'org.springframework.boot.context.properties.bind.BindResult'"}],"matched":[]},"SpringDocConfiguration.SpringDocActuatorConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.show-actuator) did not find property 'springdoc.show-actuator'"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties'"}]},"SpringDocConfiguration.SpringDocRepositoryRestConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.data.rest.core.config.RepositoryRestConfiguration'"}],"matched":[]},"SpringDocDataRestConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.data.rest.core.config.RepositoryRestConfiguration'"}],"matched":[]},"SpringDocFunctionCatalogConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.cloud.function.web.function.FunctionEndpointInitializer'"}],"matched":[]},"SpringDocGroovyConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'groovy.lang.MetaClass'"}],"matched":[]},"SpringDocHateoasConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.hateoas.server.LinkRelationProvider'"}],"matched":[]},"SpringDocJacksonKotlinModuleConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.fasterxml.jackson.module.kotlin.KotlinModule'"}],"matched":[]},"SpringDocJavadocConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.github.therapi.runtimejavadoc.CommentFormatter'"}],"matched":[]},"SpringDocKotlinxConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'kotlinx.coroutines.flow.Flow'"}],"matched":[]},"SpringDocSecurityConfiguration.SpringDocSecurityOAuth2Configuration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2AuthorizationService'"}],"matched":[]},"SpringDocSecurityConfiguration.SpringSecurityLoginEndpointConfiguration#springSecurityLoginEndpointCustomiser":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.show-login-endpoint) did not find property 'springdoc.show-login-endpoint'"}],"matched":[]},"SpringDocSortConfiguration#delegatingMethodParameterCustomizer":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.customizers.DelegatingMethodParameterCustomizer; SearchStrategy: all) found beans of type 'org.springdoc.core.customizers.DelegatingMethodParameterCustomizer' delegatingMethodParameterCustomizer"}],"matched":[]},"MultipleOpenApiSupportConfiguration.SpringDocWebMvcActuatorDifferentConfiguration":{"notMatched":[{"condition":"OnManagementPortCondition","message":"Management Port actual port type (SAME) did not match required type (DIFFERENT)"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping'"}]},"SpringDocWebMvcConfiguration.SpringDocWebMvcActuatorConfiguration#actuatorProvider":{"notMatched":[{"condition":"OnExpressionCondition","message":"@ConditionalOnExpression (#{${springdoc.show-actuator:false} or ${springdoc.use-management-port:false}}) resulted in false"}],"matched":[]},"SpringDocWebMvcConfiguration.SpringDocWebMvcActuatorConfiguration#openApiActuatorResource":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.use-management-port) did not find property 'springdoc.use-management-port'"}],"matched":[]},"SwaggerConfig#springWebProvider":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.providers.SpringWebProvider; SearchStrategy: all) found beans of type 'org.springdoc.core.providers.SpringWebProvider' springWebProvider"}],"matched":[]},"SwaggerConfig#swaggerUiConfigParameters":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springdoc.core.properties.SwaggerUiConfigParameters; SearchStrategy: all) found beans of type 'org.springdoc.core.properties.SwaggerUiConfigParameters' org.springdoc.core.properties.SwaggerUiConfigParameters"}],"matched":[]},"SwaggerConfig#swaggerUiHome":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.swagger-ui.use-root-path=true) did not find property 'springdoc.swagger-ui.use-root-path'"}],"matched":[]},"SwaggerConfig.SwaggerActuatorWelcomeConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (springdoc.use-management-port) did not find property 'springdoc.use-management-port'"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping'"}]},"RabbitHealthContributorAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate'"}],"matched":[]},"AuditAutoConfiguration":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository"}],"matched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (management.auditevents.enabled) matched"}]},"AuditEventsEndpointAutoConfiguration#auditEventsEndpoint":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository"}],"matched":[]},"AvailabilityHealthContributorAutoConfiguration#livenessStateHealthIndicator":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (management.health.livenessstate.enabled=true) did not find property 'enabled'"}],"matched":[]},"AvailabilityHealthContributorAutoConfiguration#readinessStateHealthIndicator":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (management.health.readinessstate.enabled=true) did not find property 'enabled'"}],"matched":[]},"AvailabilityProbesAutoConfiguration":{"notMatched":[{"condition":"AvailabilityProbesAutoConfiguration.ProbesCondition","message":"Probes availability not running on a supported cloud platform"}],"matched":[]},"CassandraHealthContributorAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession'"}],"matched":[]},"CassandraReactiveHealthContributorAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession'"}],"matched":[]},"ReactiveCloudFoundryActuatorAutoConfiguration":{"notMatched":[{"condition":"OnWebApplicationCondition","message":"not a reactive web application"}],"matched":[]},"CloudFoundryActuatorAutoConfiguration":{"notMatched":[{"condition":"OnCloudPlatformCondition","message":"@ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet'"},{"condition":"OnWebApplicationCondition","message":"found 'session' scope"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (management.cloudfoundry.enabled) matched"}]},"ShutdownEndpointAutoConfiguration":{"notMatched":[{"condition":"OnAvailableEndpointCondition","message":"@ConditionalOnAvailableEndpoint no property management.endpoint.shutdown.enabled found so using endpoint default of false"}],"matched":[]},"CouchbaseHealthContributorAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster'"}],"matched":[]},"CouchbaseReactiveHealthContributorAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster'"}],"matched":[]},"ElasticsearchReactiveHealthContributorAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient'"}],"matched":[]},"MongoHealthContributorAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.MongoTemplate'"}],"matched":[]},"MongoReactiveHealthContributorAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.data.mongodb.core.ReactiveMongoTemplate'"}],"matched":[]},"RedisHealthContributorAutoConfiguration#redisHealthContributor":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) found beans named redisHealthContributor"}],"matched":[]},"ElasticsearchRestHealthContributorAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClient'"}],"matched":[]},"JmxEndpointAutoConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled'"}],"matched":[]},"ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig'"}],"matched":[]},"JerseyWebEndpointManagementContextConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig'"}],"matched":[]},"WebFluxEndpointManagementContextConfiguration":{"notMatched":[{"condition":"OnWebApplicationCondition","message":"not a reactive web application"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.springframework.web.reactive.DispatcherHandler', 'org.springframework.http.server.reactive.HttpHandler'"}]},"WebMvcEndpointManagementContextConfiguration#managementHealthEndpointWebMvcHandlerMapping":{"notMatched":[{"condition":"OnManagementPortCondition","message":"Management Port actual port type (SAME) did not match required type (DIFFERENT)"}],"matched":[]},"FlywayEndpointAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway'"}],"matched":[]},"HazelcastHealthContributorAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance'"}],"matched":[]},"HealthEndpointReactiveWebExtensionConfiguration":{"notMatched":[{"condition":"OnWebApplicationCondition","message":"not a reactive web application"}],"matched":[]},"HealthEndpointWebExtensionConfiguration.JerseyAdditionalHealthEndpointPathsConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig'"}],"matched":[]},"InfluxDbHealthContributorAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.influxdb.InfluxDB'"}],"matched":[]},"InfoContributorAutoConfiguration#buildInfoContributor":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans"}],"matched":[{"condition":"OnEnabledInfoContributorCondition","message":"@ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true"}]},"InfoContributorAutoConfiguration#envInfoContributor":{"notMatched":[{"condition":"OnEnabledInfoContributorCondition","message":"@ConditionalOnEnabledInfoContributor management.info.env.enabled is not true"}],"matched":[]},"InfoContributorAutoConfiguration#gitInfoContributor":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans"}],"matched":[{"condition":"OnEnabledInfoContributorCondition","message":"@ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true"}]},"InfoContributorAutoConfiguration#javaInfoContributor":{"notMatched":[{"condition":"OnEnabledInfoContributorCondition","message":"@ConditionalOnEnabledInfoContributor management.info.java.enabled is not true"}],"matched":[]},"InfoContributorAutoConfiguration#osInfoContributor":{"notMatched":[{"condition":"OnEnabledInfoContributorCondition","message":"@ConditionalOnEnabledInfoContributor management.info.os.enabled is not true"}],"matched":[]},"IntegrationGraphEndpointAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer'"}],"matched":[]},"JmsHealthContributorAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory'"}],"matched":[]},"LdapHealthContributorAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations'"}],"matched":[]},"LiquibaseEndpointAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase'"}],"matched":[]},"MailHealthContributorAutoConfiguration":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.mail.javamail.JavaMailSenderImpl; SearchStrategy: all) did not find any beans of type org.springframework.mail.javamail.JavaMailSenderImpl"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.mail.javamail.JavaMailSenderImpl'"},{"condition":"OnEnabledHealthIndicatorCondition","message":"@ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true"}]},"CompositeMeterRegistryConfiguration":{"notMatched":[{"condition":"CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition","message":"NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a single bean 'prometheusMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' prometheusMeterRegistry"}],"matched":[]},"KafkaMetricsAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.kafka.core.ProducerFactory'"}],"matched":[]},"Log4J2MetricsAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.apache.logging.log4j.core.LoggerContext'"}],"matched":[]},"MetricsAspectsAutoConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (micrometer.observations.annotations.enabled=true) did not find property 'enabled'"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'org.aspectj.weaver.Advice'"}]},"NoOpMeterRegistryConfiguration":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' prometheusMeterRegistry"}],"matched":[]},"RabbitMetricsAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory'"}],"matched":[]},"CacheMeterBinderProvidersConfiguration.Cache2kCacheMeterBinderProviderConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required classes 'org.cache2k.Cache2kBuilder', 'org.cache2k.extra.spring.SpringCache2kCache', 'org.cache2k.extra.micrometer.Cache2kCacheMetrics'"}],"matched":[]},"CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast'"}],"matched":[]},"AppOpticsMetricsExportAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry'"}],"matched":[]},"AtlasMetricsExportAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry'"}],"matched":[]},"DatadogMetricsExportAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry'"}],"matched":[]},"DynatraceMetricsExportAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry'"}],"matched":[]},"ElasticMetricsExportAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry'"}],"matched":[]},"GangliaMetricsExportAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry'"}],"matched":[]},"GraphiteMetricsExportAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry'"}],"matched":[]},"HumioMetricsExportAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry'"}],"matched":[]},"InfluxMetricsExportAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry'"}],"matched":[]},"JmxMetricsExportAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry'"}],"matched":[]},"KairosMetricsExportAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry'"}],"matched":[]},"NewRelicMetricsExportAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry'"}],"matched":[]},"OtlpMetricsExportAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.registry.otlp.OtlpMeterRegistry'"}],"matched":[]},"PrometheusMetricsExportAutoConfiguration#exemplarSampler":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: io.prometheus.client.exemplars.tracer.common.SpanContextSupplier; SearchStrategy: all) did not find any beans of type io.prometheus.client.exemplars.tracer.common.SpanContextSupplier"}],"matched":[]},"PrometheusMetricsExportAutoConfiguration.PrometheusPushGatewayConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.prometheus.client.exporter.PushGateway'"}],"matched":[]},"SignalFxMetricsExportAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry'"}],"matched":[]},"SimpleMetricsExportAutoConfiguration":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' prometheusMeterRegistry"}],"matched":[{"condition":"OnMetricsExportEnabledCondition","message":"@ConditionalOnEnabledMetricsExport management.defaults.metrics.export.enabled is considered true"}]},"StackdriverMetricsExportAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.stackdriver.StackdriverMeterRegistry'"}],"matched":[]},"StatsdMetricsExportAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry'"}],"matched":[]},"WavefrontMetricsExportAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender'"}],"matched":[]},"JerseyServerMetricsAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.core.instrument.binder.jersey.server.MetricsApplicationEventListener'"}],"matched":[]},"MongoMetricsAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings'"}],"matched":[]},"HibernateMetricsAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'jakarta.persistence.EntityManagerFactory'"}],"matched":[]},"ConnectionPoolMetricsAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.r2dbc.pool.ConnectionPool'"}],"matched":[]},"LettuceMetricsAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.lettuce.core.metrics.MicrometerCommandLatencyRecorder'"}],"matched":[]},"JettyMetricsAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server'"}],"matched":[]},"Neo4jHealthContributorAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.neo4j.driver.Driver'"}],"matched":[]},"ObservationAutoConfiguration.MeterObservationHandlerConfiguration.TracingAndMetricsObservationHandlerConfiguration":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean did not find required type 'io.micrometer.tracing.Tracer'"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: io.micrometer.tracing.Tracer; SearchStrategy: all) did not find any beans of type io.micrometer.tracing.Tracer"}],"matched":[]},"ObservationAutoConfiguration.MetricsWithTracingConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer'"}],"matched":[]},"ObservationAutoConfiguration.OnlyTracingConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer'"}],"matched":[]},"BatchObservationAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor'"}],"matched":[]},"GraphQlObservationAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'graphql.GraphQL'"}],"matched":[]},"WebFluxObservationAutoConfiguration":{"notMatched":[{"condition":"OnWebApplicationCondition","message":"not a reactive web application"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'io.micrometer.observation.Observation', 'io.micrometer.core.instrument.MeterRegistry'"}]},"OpenTelemetryAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer'"}],"matched":[]},"QuartzEndpointAutoConfiguration#quartzEndpoint":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.quartz.Scheduler; SearchStrategy: all) did not find any beans of type org.quartz.Scheduler"}],"matched":[]},"QuartzEndpointAutoConfiguration#quartzEndpointWebExtension":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.boot.actuate.quartz.QuartzEndpoint; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.quartz.QuartzEndpoint"}],"matched":[]},"ConnectionFactoryHealthContributorAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory'"}],"matched":[]},"R2dbcObservationAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.r2dbc.proxy.ProxyConnectionFactory'"}],"matched":[]},"ReactiveManagementWebSecurityAutoConfiguration":{"notMatched":[{"condition":"OnWebApplicationCondition","message":"not a reactive web application"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity', 'org.springframework.security.web.server.WebFilterChainProxy'"}]},"ManagementWebSecurityAutoConfiguration":{"notMatched":[{"condition":"DefaultWebSecurityCondition","message":"AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.web.SecurityFilterChain' filterChain; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity'"}],"matched":[{"condition":"OnWebApplicationCondition","message":"found 'session' scope"}]},"SecurityRequestMatchersManagementContextConfiguration.JerseyRequestMatcherConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig'"}],"matched":[]},"SessionsEndpointAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.session.FindByIndexNameSessionRepository'"}],"matched":[]},"StartupEndpointAutoConfiguration":{"notMatched":[{"condition":"StartupEndpointAutoConfiguration.ApplicationStartupCondition","message":"ApplicationStartup configured applicationStartup is of type class org.springframework.core.metrics.DefaultApplicationStartup, expected BufferingApplicationStartup."}],"matched":[]},"BraveAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'brave.Tracer'"}],"matched":[]},"MicrometerTracingAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer'"}],"matched":[]},"NoopTracerAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer'"}],"matched":[]},"OtlpAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.tracing.otel.bridge.OtelTracer'"}],"matched":[]},"PrometheusExemplarsAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.micrometer.tracing.Tracer'"}],"matched":[]},"WavefrontTracingAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender'"}],"matched":[]},"ZipkinAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'zipkin2.reporter.Sender'"}],"matched":[]},"WavefrontAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.wavefront.sdk.common.application.ApplicationTags'"}],"matched":[]},"HttpExchangesAutoConfiguration":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository"}],"matched":[{"condition":"OnWebApplicationCondition","message":"@ConditionalOnWebApplication (required) found 'session' scope"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (management.httpexchanges.recording.enabled) matched"}]},"HttpExchangesAutoConfiguration.ReactiveHttpExchangesConfiguration":{"notMatched":[{"condition":"OnWebApplicationCondition","message":"not a reactive web application"},{"condition":"ConditionEvaluationReport.AncestorsMatchedCondition","message":"Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match"}],"matched":[]},"HttpExchangesAutoConfiguration.ServletHttpExchangesConfiguration":{"notMatched":[{"condition":"ConditionEvaluationReport.AncestorsMatchedCondition","message":"Ancestor org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration did not match"}],"matched":[{"condition":"OnWebApplicationCondition","message":"found 'session' scope"}]},"HttpExchangesEndpointAutoConfiguration#httpExchangesEndpoint":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository"}],"matched":[]},"JerseySameManagementContextConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig'"}],"matched":[]},"MappingsEndpointAutoConfiguration.ReactiveWebConfiguration":{"notMatched":[{"condition":"OnWebApplicationCondition","message":"not a reactive web application"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.web.reactive.DispatcherHandler'"}]},"ReactiveManagementContextAutoConfiguration":{"notMatched":[{"condition":"OnWebApplicationCondition","message":"not a reactive web application"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'reactor.core.publisher.Flux'"}]},"ManagementContextAutoConfiguration.DifferentManagementContextConfiguration":{"notMatched":[{"condition":"OnManagementPortCondition","message":"Management Port actual port type (SAME) did not match required type (DIFFERENT)"}],"matched":[]},"ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (management.server.add-application-context-header=true) did not find property 'add-application-context-header'"}],"matched":[]},"SpringApplicationAdminJmxAutoConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.application.admin.enabled=true) did not find property 'enabled'"}],"matched":[]},"RabbitAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel'"}],"matched":[]},"AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class'"}],"matched":[]},"AopAutoConfiguration.ClassProxyingConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice'"}],"matched":[]},"BatchAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher'"}],"matched":[]},"Cache2kCacheConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.cache2k.Cache2kBuilder'"}],"matched":[]},"CacheAutoConfiguration":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (names: cacheResolver types: org.springframework.cache.CacheManager; SearchStrategy: all) found beans of type 'org.springframework.cache.CacheManager' redisCacheManager"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.cache.CacheManager'"}]},"CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean'"},{"condition":"ConditionEvaluationReport.AncestorsMatchedCondition","message":"Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match"}],"matched":[]},"CaffeineCacheConfiguration":{"notMatched":[{"condition":"CacheCondition","message":"Cache org.springframework.boot.autoconfigure.cache.CaffeineCacheConfiguration unknown cache type"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'com.github.benmanes.caffeine.cache.Caffeine', 'org.springframework.cache.caffeine.CaffeineCacheManager'"}]},"CouchbaseCacheConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster'"}],"matched":[]},"GenericCacheConfiguration":{"notMatched":[{"condition":"CacheCondition","message":"Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration unknown cache type"}],"matched":[]},"HazelcastCacheConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance'"}],"matched":[]},"InfinispanCacheConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager'"}],"matched":[]},"JCacheCacheConfiguration":{"notMatched":[{"condition":"CacheCondition","message":"Cache org.springframework.boot.autoconfigure.cache.JCacheCacheConfiguration unknown cache type"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'javax.cache.Caching', 'org.springframework.cache.jcache.JCacheCacheManager'"}]},"NoOpCacheConfiguration":{"notMatched":[{"condition":"CacheCondition","message":"Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration unknown cache type"}],"matched":[]},"SimpleCacheConfiguration":{"notMatched":[{"condition":"CacheCondition","message":"Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration unknown cache type"}],"matched":[]},"CassandraAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession'"}],"matched":[]},"MessageSourceAutoConfiguration":{"notMatched":[{"condition":"MessageSourceAutoConfiguration.ResourceBundleCondition","message":"ResourceBundle did not find bundle with basename messages"}],"matched":[]},"CouchbaseAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster'"}],"matched":[]},"CassandraDataAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession'"}],"matched":[]},"CassandraReactiveDataAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession'"}],"matched":[]},"CassandraReactiveRepositoriesAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession'"}],"matched":[]},"CassandraRepositoriesAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession'"}],"matched":[]},"CouchbaseDataAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket'"}],"matched":[]},"CouchbaseReactiveDataAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster'"}],"matched":[]},"CouchbaseReactiveRepositoriesAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster'"}],"matched":[]},"CouchbaseRepositoriesAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket'"}],"matched":[]},"ElasticsearchDataAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate'"}],"matched":[]},"ElasticsearchRepositoriesAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.repository.ElasticsearchRepository'"}],"matched":[]},"ReactiveElasticsearchRepositoriesAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient'"}],"matched":[]},"JdbcRepositoriesAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration'"}],"matched":[]},"JpaRepositoriesAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository'"}],"matched":[]},"LdapRepositoriesAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository'"}],"matched":[]},"MongoDataAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient'"}],"matched":[]},"MongoReactiveDataAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient'"}],"matched":[]},"MongoReactiveRepositoriesAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient'"}],"matched":[]},"MongoRepositoriesAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient'"}],"matched":[]},"Neo4jDataAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.neo4j.driver.Driver'"}],"matched":[]},"Neo4jReactiveDataAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.neo4j.driver.Driver'"}],"matched":[]},"Neo4jReactiveRepositoriesAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.neo4j.driver.Driver'"}],"matched":[]},"Neo4jRepositoriesAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.neo4j.driver.Driver'"}],"matched":[]},"R2dbcDataAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate'"}],"matched":[]},"R2dbcRepositoriesAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory'"}],"matched":[]},"JedisConnectionConfiguration":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found beans of type 'org.springframework.data.redis.connection.RedisConnectionFactory' redissonConnectionFactory"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'org.springframework.data.redis.connection.jedis.JedisConnection', 'redis.clients.jedis.Jedis'"},{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.data.redis.client-type=jedis) matched"}]},"LettuceConnectionConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.lettuce.core.RedisClient'"}],"matched":[]},"RedisAutoConfiguration#redisTemplate":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) found beans named redisTemplate"}],"matched":[]},"RedisAutoConfiguration#stringRedisTemplate":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) found beans of type 'org.springframework.data.redis.core.StringRedisTemplate' stringRedisTemplate"}],"matched":[]},"RedisRepositoriesAutoConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.data.redis.repositories.enabled=true) found different value in property 'enabled'"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories'"}]},"RepositoryRestMvcAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration'"}],"matched":[]},"ElasticsearchClientAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'co.elastic.clients.elasticsearch.ElasticsearchClient'"}],"matched":[]},"ElasticsearchRestClientAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder'"}],"matched":[]},"ReactiveElasticsearchClientAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'co.elastic.clients.transport.ElasticsearchTransport'"}],"matched":[]},"FlywayAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway'"}],"matched":[]},"FreeMarkerAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'freemarker.template.Configuration'"}],"matched":[]},"GraphQlAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'graphql.GraphQL'"}],"matched":[]},"GraphQlQueryByExampleAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'graphql.GraphQL'"}],"matched":[]},"GraphQlQuerydslAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.querydsl.core.Query'"}],"matched":[]},"GraphQlReactiveQueryByExampleAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'graphql.GraphQL'"}],"matched":[]},"GraphQlReactiveQuerydslAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.querydsl.core.Query'"}],"matched":[]},"GraphQlWebFluxAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'graphql.GraphQL'"}],"matched":[]},"GraphQlRSocketAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'graphql.GraphQL'"}],"matched":[]},"RSocketGraphQlClientAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'graphql.GraphQL'"}],"matched":[]},"GraphQlWebFluxSecurityAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'graphql.GraphQL'"}],"matched":[]},"GraphQlWebMvcSecurityAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'graphql.GraphQL'"}],"matched":[]},"GraphQlWebMvcAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'graphql.GraphQL'"}],"matched":[]},"GroovyTemplateAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine'"}],"matched":[]},"H2ConsoleAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.h2.server.web.JakartaWebServlet'"}],"matched":[]},"HypermediaAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel'"}],"matched":[]},"HazelcastAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance'"}],"matched":[]},"HazelcastJpaDependencyAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance'"}],"matched":[]},"GsonHttpMessageConvertersConfiguration.GsonHttpMessageConverterConfiguration":{"notMatched":[{"condition":"GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition","message":"AnyNestedCondition 0 matched 2 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.JacksonJsonbUnavailable NoneNestedConditions 1 matched 1 did not; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JsonbPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jsonb) did not find property 'spring.mvc.converters.preferred-json-mapper'; NestedCondition on GsonHttpMessageConvertersConfiguration.JacksonAndJsonbUnavailableCondition.JacksonAvailable @ConditionalOnBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter; SearchStrategy: all) found bean 'mappingJackson2HttpMessageConverter'; NestedCondition on GsonHttpMessageConvertersConfiguration.PreferGsonOrJacksonAndJsonbUnavailableCondition.GsonPreferred @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=gson) did not find property 'spring.mvc.converters.preferred-json-mapper'"}],"matched":[]},"JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper'"}],"matched":[]},"JsonbHttpMessageConvertersConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb'"}],"matched":[]},"InfluxDbAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.influxdb.InfluxDB'"}],"matched":[]},"ProjectInfoAutoConfiguration#buildProperties":{"notMatched":[{"condition":"OnResourceCondition","message":"@ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}'"}],"matched":[]},"ProjectInfoAutoConfiguration#gitProperties":{"notMatched":[{"condition":"ProjectInfoAutoConfiguration.GitResourceAvailableCondition","message":"GitResource did not find git info at classpath:git.properties"}],"matched":[]},"IntegrationAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration'"}],"matched":[]},"DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration":{"notMatched":[{"condition":"DataSourceAutoConfiguration.EmbeddedDatabaseCondition","message":"EmbeddedDataSource found supported pooled data source"}],"matched":[]},"DataSourceAutoConfiguration.PooledDataSourceConfiguration":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) found beans of type 'javax.sql.DataSource' dataSource"}],"matched":[{"condition":"DataSourceAutoConfiguration.PooledDataSourceCondition","message":"AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type'"}]},"DataSourceCheckpointRestoreConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.crac.Resource'"}],"matched":[]},"DataSourceConfiguration.Dbcp2":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource'"}],"matched":[]},"DataSourceConfiguration.Generic":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type'"}],"matched":[]},"DataSourceConfiguration.OracleUcp":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection'"}],"matched":[]},"DataSourceConfiguration.Tomcat":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource'"}],"matched":[]},"DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy'"}],"matched":[]},"JndiDataSourceAutoConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name'"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType'"}]},"XADataSourceAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'jakarta.transaction.TransactionManager'"}],"matched":[]},"DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource'"}],"matched":[]},"DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection'"}],"matched":[]},"DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource'"}],"matched":[]},"JerseyAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider'"}],"matched":[]},"JmsAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'jakarta.jms.Message'"}],"matched":[]},"JndiConnectionFactoryAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate'"}],"matched":[]},"ActiveMQAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory'"}],"matched":[]},"ArtemisAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'jakarta.jms.ConnectionFactory'"}],"matched":[]},"JmxAutoConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.jmx.enabled=true) did not find property 'enabled'"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter'"}]},"JooqAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.jooq.DSLContext'"}],"matched":[]},"JsonbAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'jakarta.json.bind.Jsonb'"}],"matched":[]},"KafkaAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate'"}],"matched":[]},"LdapAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource'"}],"matched":[]},"EmbeddedLdapAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer'"}],"matched":[]},"LiquibaseAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange'"}],"matched":[]},"MailSenderAutoConfiguration":{"notMatched":[{"condition":"MailSenderAutoConfiguration.MailSenderCondition","message":"AnyNestedCondition 0 matched 2 did not; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.JndiNameProperty @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name'; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.HostProperty @ConditionalOnProperty (spring.mail.host) did not find property 'host'"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'jakarta.mail.internet.MimeMessage', 'jakarta.activation.MimeType', 'org.springframework.mail.MailSender'"}]},"MailSenderValidatorAutoConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection'"}],"matched":[]},"MongoAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient'"}],"matched":[]},"MongoReactiveAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient'"}],"matched":[]},"MustacheAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache'"}],"matched":[]},"Neo4jAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.neo4j.driver.Driver'"}],"matched":[]},"HibernateJpaAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'jakarta.persistence.EntityManager'"}],"matched":[]},"PulsarAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient'"}],"matched":[]},"PulsarReactiveAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.apache.pulsar.client.api.PulsarClient'"}],"matched":[]},"R2dbcAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory'"}],"matched":[]},"R2dbcTransactionManagerAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager'"}],"matched":[]},"RSocketMessagingAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.rsocket.RSocket'"}],"matched":[]},"RSocketRequesterAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.rsocket.RSocket'"}],"matched":[]},"RSocketServerAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer'"}],"matched":[]},"RSocketStrategiesAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.rsocket.RSocket'"}],"matched":[]},"SecurityDataConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.security.data.repository.query.SecurityEvaluationContextExtension'"}],"matched":[]},"ReactiveOAuth2ClientAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration'"}],"matched":[]},"OAuth2ClientAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.security.oauth2.client.registration.ClientRegistration'"}],"matched":[]},"ReactiveOAuth2ResourceServerAutoConfiguration":{"notMatched":[{"condition":"OnWebApplicationCondition","message":"not a reactive web application"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity'"}]},"OAuth2ResourceServerAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken'"}],"matched":[]},"OAuth2AuthorizationServerAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization'"}],"matched":[]},"OAuth2AuthorizationServerJwtAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.authorization.OAuth2Authorization'"}],"matched":[]},"ReactiveSecurityAutoConfiguration.SpringBootWebFluxSecurityConfiguration":{"notMatched":[{"condition":"OnWebApplicationCondition","message":"not a reactive web application"}],"matched":[]},"ReactiveUserDetailsServiceAutoConfiguration":{"notMatched":[{"condition":"ReactiveUserDetailsServiceAutoConfiguration.RSocketEnabledOrReactiveWebApplication","message":"AnyNestedCondition 0 matched 2 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.RSocketEnabledOrReactiveWebApplication.ReactiveWebApplicationCondition not a reactive web application; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.RSocketEnabledOrReactiveWebApplication.RSocketSecurityEnabledCondition @ConditionalOnBean (types: org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler; SearchStrategy: all) did not find any beans of type org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.security.authentication.ReactiveAuthenticationManager'"},{"condition":"ReactiveUserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured","message":"AnyNestedCondition 1 matched 2 did not; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.PasswordConfigured @ConditionalOnProperty (spring.security.user.password) did not find property 'password'; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.NameConfigured @ConditionalOnProperty (spring.security.user.name) did not find property 'name'; NestedCondition on ReactiveUserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.MissingAlternative @ConditionalOnMissingClass did not find unwanted classes 'org.springframework.security.oauth2.client.registration.ClientRegistrationRepository', 'org.springframework.security.oauth2.server.resource.introspection.ReactiveOpaqueTokenIntrospector'"}]},"RSocketSecurityAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor'"}],"matched":[]},"Saml2RelyingPartyAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository'"}],"matched":[]},"SpringBootWebSecurityConfiguration.SecurityFilterChainConfiguration":{"notMatched":[{"condition":"DefaultWebSecurityCondition","message":"AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) found beans of type 'org.springframework.security.web.SecurityFilterChain' filterChain; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass found required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity'"}],"matched":[]},"UserDetailsServiceAutoConfiguration":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.security.authentication.AuthenticationManager,org.springframework.security.authentication.AuthenticationProvider,org.springframework.security.core.userdetails.UserDetailsService,org.springframework.security.authentication.AuthenticationManagerResolver,org.springframework.security.oauth2.jwt.JwtDecoder; SearchStrategy: all) found beans of type 'org.springframework.security.authentication.AuthenticationManager' authenticationManagerBean"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.security.authentication.AuthenticationManager'"},{"condition":"UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured","message":"AnyNestedCondition 1 matched 2 did not; NestedCondition on UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.PasswordConfigured @ConditionalOnProperty (spring.security.user.password) did not find property 'password'; NestedCondition on UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.NameConfigured @ConditionalOnProperty (spring.security.user.name) did not find property 'name'; NestedCondition on UserDetailsServiceAutoConfiguration.MissingAlternativeOrUserPropertiesConfigured.MissingAlternative @ConditionalOnMissingClass did not find unwanted classes 'org.springframework.security.oauth2.client.registration.ClientRegistrationRepository', 'org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector', 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository'"}]},"SendGridAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.sendgrid.SendGrid'"}],"matched":[]},"SessionAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.session.Session'"}],"matched":[]},"R2dbcInitializationConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator'"}],"matched":[]},"TaskExecutorConfigurations.SimpleAsyncTaskExecutorBuilderConfiguration#simpleAsyncTaskExecutorBuilderVirtualThreads":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder' simpleAsyncTaskExecutorBuilder"}],"matched":[]},"TaskExecutorConfigurations.TaskExecutorConfiguration#applicationTaskExecutorVirtualThreads":{"notMatched":[{"condition":"OnThreadingCondition","message":"@ConditionalOnThreading did not find VIRTUAL"}],"matched":[]},"TaskSchedulingConfigurations.SimpleAsyncTaskSchedulerBuilderConfiguration#simpleAsyncTaskSchedulerBuilderVirtualThreads":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder; SearchStrategy: all) found beans of type 'org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder' simpleAsyncTaskSchedulerBuilder"}],"matched":[]},"TaskSchedulingConfigurations.TaskSchedulerConfiguration#taskSchedulerVirtualThreads":{"notMatched":[{"condition":"OnThreadingCondition","message":"@ConditionalOnThreading did not find VIRTUAL"}],"matched":[]},"TemplateEngineConfigurations.ReactiveTemplateEngineConfiguration":{"notMatched":[{"condition":"OnWebApplicationCondition","message":"not a reactive web application"}],"matched":[]},"ThymeleafAutoConfiguration.DataAttributeDialectConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'com.github.mxab.thymeleaf.extras.dataattribute.dialect.DataAttributeDialect'"}],"matched":[]},"ThymeleafAutoConfiguration.ThymeleafSecurityDialectConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.thymeleaf.extras.springsecurity6.dialect.SpringSecurityDialect'"}],"matched":[]},"ThymeleafAutoConfiguration.ThymeleafWebFluxConfiguration":{"notMatched":[{"condition":"OnWebApplicationCondition","message":"not a reactive web application"}],"matched":[]},"ThymeleafAutoConfiguration.ThymeleafWebLayoutConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'nz.net.ultraq.thymeleaf.layoutdialect.LayoutDialect'"}],"matched":[]},"TransactionAutoConfiguration#transactionalOperator":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans"}],"matched":[]},"TransactionAutoConfiguration.AspectJTransactionManagementConfiguration":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean did not find required type 'org.springframework.transaction.aspectj.AbstractTransactionAspect'"},{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.transaction.aspectj.AbstractTransactionAspect; SearchStrategy: all) did not find any beans of type org.springframework.transaction.aspectj.AbstractTransactionAspect"}],"matched":[]},"TransactionAutoConfiguration.EnableTransactionManagementConfiguration":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) found beans of type 'org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration' org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration"}],"matched":[]},"TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration":{"notMatched":[{"condition":"ConditionEvaluationReport.AncestorsMatchedCondition","message":"Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match"}],"matched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.aop.proxy-target-class=true) matched"}]},"TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class'"},{"condition":"ConditionEvaluationReport.AncestorsMatchedCondition","message":"Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match"}],"matched":[]},"JtaAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'jakarta.transaction.Transaction'"}],"matched":[]},"EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext'"}],"matched":[]},"EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration#tomcatVirtualThreadsProtocolHandlerCustomizer":{"notMatched":[{"condition":"OnThreadingCondition","message":"@ConditionalOnThreading did not find VIRTUAL"}],"matched":[]},"EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode'"}],"matched":[]},"HttpHandlerAutoConfiguration":{"notMatched":[{"condition":"OnWebApplicationCondition","message":"not a reactive web application"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.springframework.web.reactive.DispatcherHandler', 'org.springframework.http.server.reactive.HttpHandler'"}]},"ReactiveMultipartAutoConfiguration":{"notMatched":[{"condition":"OnWebApplicationCondition","message":"not a reactive web application"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.springframework.http.codec.multipart.DefaultPartHttpMessageReader', 'org.springframework.web.reactive.config.WebFluxConfigurer'"}]},"ReactiveWebServerFactoryAutoConfiguration":{"notMatched":[{"condition":"OnWebApplicationCondition","message":"not a reactive web application"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.http.ReactiveHttpInputMessage'"}]},"WebFluxAutoConfiguration":{"notMatched":[{"condition":"OnWebApplicationCondition","message":"not a reactive web application"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.web.reactive.config.WebFluxConfigurer'"}]},"WebSessionIdResolverAutoConfiguration":{"notMatched":[{"condition":"OnWebApplicationCondition","message":"not a reactive web application"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'org.springframework.web.server.session.WebSessionManager', 'reactor.core.publisher.Mono'"}]},"ErrorWebFluxAutoConfiguration":{"notMatched":[{"condition":"OnWebApplicationCondition","message":"not a reactive web application"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'org.springframework.web.reactive.config.WebFluxConfigurer'"}]},"ClientHttpConnectorFactoryConfiguration.HttpClient5":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.apache.hc.core5.reactive.ReactiveResponseConsumer'"}],"matched":[]},"ClientHttpConnectorFactoryConfiguration.JdkClient":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory; SearchStrategy: all) found beans of type 'org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory' reactorClientHttpConnectorFactory"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required class 'java.net.http.HttpClient'"}]},"DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver"}],"matched":[]},"ServletWebServerFactoryAutoConfiguration.ForwardedHeaderFilterConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy'"}],"matched":[]},"ServletWebServerFactoryConfiguration.EmbeddedJetty":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.ee10.webapp.WebAppContext'"}],"matched":[]},"ServletWebServerFactoryConfiguration.EmbeddedUndertow":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode'"}],"matched":[]},"WebMvcAutoConfiguration#hiddenHttpMethodFilter":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled'"}],"matched":[]},"WebMvcAutoConfiguration.ProblemDetailsErrorHandlingConfiguration":{"notMatched":[{"condition":"OnPropertyCondition","message":"@ConditionalOnProperty (spring.mvc.problemdetails.enabled=true) did not find property 'enabled'"}],"matched":[]},"WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver"}],"matched":[]},"WebServicesAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet'"}],"matched":[]},"WebServiceTemplateAutoConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate'"}],"matched":[]},"WebSocketReactiveAutoConfiguration":{"notMatched":[{"condition":"OnWebApplicationCondition","message":"not a reactive web application"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'jakarta.servlet.Servlet', 'jakarta.websocket.server.ServerContainer'"}]},"WebSocketMessagingAutoConfiguration.WebSocketMessageConverterConfiguration":{"notMatched":[{"condition":"OnBeanCondition","message":"@ConditionalOnBean (types: org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration,com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans of type org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration"}],"matched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass found required classes 'com.fasterxml.jackson.databind.ObjectMapper', 'org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration'"}]},"WebSocketServletAutoConfiguration.JettyWebSocketConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer'"}],"matched":[]},"WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration":{"notMatched":[{"condition":"OnClassCondition","message":"@ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap'"}],"matched":[]}},"exclusions":["org.springframework.boot.autoconfigure.quartz.QuartzAutoConfiguration","de.codecentric.boot.admin.server.config.AdminServerAutoConfiguration","de.codecentric.boot.admin.server.ui.config.AdminServerUiAutoConfiguration","de.codecentric.boot.admin.client.config.SpringBootAdminClientAutoConfiguration","org.springframework.boot.autoconfigure.quartz.QuartzAutoConfiguration","de.codecentric.boot.admin.server.config.AdminServerAutoConfiguration","de.codecentric.boot.admin.server.ui.config.AdminServerUiAutoConfiguration","de.codecentric.boot.admin.client.config.SpringBootAdminClientAutoConfiguration"],"unconditionalClasses":["co.yixiang.yshop.framework.quartz.config.YshopQuartzAutoConfiguration","co.yixiang.yshop.framework.idempotent.config.YshopIdempotentConfiguration","co.yixiang.yshop.framework.jackson.config.YshopJacksonAutoConfiguration","co.yixiang.yshop.framework.operatelog.config.YshopOperateLogConfiguration","co.yixiang.yshop.framework.dict.config.YshopDictAutoConfiguration","org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration","co.yixiang.yshop.framework.mq.redis.config.YshopRedisMQConsumerAutoConfiguration","org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration","org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration","co.yixiang.yshop.framework.redis.config.YshopCacheAutoConfiguration","co.yixiang.yshop.framework.translate.config.YshopTranslateAutoConfiguration","org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration","co.yixiang.yshop.framework.datapermission.config.YshopDataPermissionAutoConfiguration","co.yixiang.yshop.framework.quartz.config.YshopAsyncAutoConfiguration","co.yixiang.yshop.framework.banner.config.YshopBannerAutoConfiguration","com.xingyuv.justauth.autoconfigure.JustAuthAutoConfiguration","org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration","co.yixiang.yshop.framework.web.config.YshopWebAutoConfiguration","co.yixiang.yshop.framework.mybatis.config.YshopMybatisAutoConfiguration","co.yixiang.yshop.framework.redis.config.YshopRedisAutoConfiguration","org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration","org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration","com.binarywang.spring.starter.wxjava.mp.config.WxMpAutoConfiguration","org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration","de.codecentric.boot.admin.server.config.AdminServerNotifierAutoConfiguration","org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration","com.xingyuv.captcha.config.AjCaptchaAutoConfiguration","com.fhs.trans.config.TransServiceConfig","com.egzosn.pay.spring.boot.autoconfigue.PayAutoConfiguration","org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration","co.yixiang.yshop.framework.security.config.YshopWebSecurityConfigurerAdapter","co.yixiang.yshop.framework.security.config.YshopSecurityAutoConfiguration","co.yixiang.yshop.framework.datasource.config.YshopDataSourceAutoConfiguration","co.yixiang.yshop.framework.apilog.config.YshopApiLogAutoConfiguration","org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration","cn.hutool.extra.spring.SpringUtil","org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration","co.yixiang.yshop.framework.mq.redis.config.YshopRedisMQProducerAutoConfiguration","com.binarywang.spring.starter.wxjava.miniapp.config.WxMaAutoConfiguration","org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration","com.fhs.trans.config.EasyTransMybatisPlusConfig","co.yixiang.yshop.framework.ratelimiter.config.YshopRateLimiterConfiguration"]}}}